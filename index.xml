<?xml version="1.0" encoding="utf-8"?>
<feed xmlns="http://www.w3.org/2005/Atom">
  <title>nTest blog</title>
  <link href="http://ntest.github.comindex.xml" rel="self" />
  <link href="http://ntest.github.com"/>
  <updated>2012-07-31T14:52:26Z</updated>
  <id>http://ntest.github.comindex.xml</id>
  <entry><title type="html">OCaml与C的互操作</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/31_ocamlc.html"/><updated>2012-07-31T10:02:00Z</updated><published>2012-07-31T10:02:00Z</published><id>blog/2012/07/31_ocamlc.html</id><category scheme="/tags/ocaml.html" term="ocaml" label="ocaml"/><category scheme="/tags/c.html" term="c" label="c"/><content type="html">&lt;p&gt;
  &#26412;&#25991;&#24635;&#32467;OCaml&#19982;C&#30340;&#20132;&#20114;&#65306;&#22312;C&#20013;&#22914;&#20309;&#20998;&#37197;&#21644;&#20462;&#25913;ocaml value&#65292;&#22914;&#20309;&#23558;ocaml
  value&#36716;&#25442;&#20026;C struct&#65292; &#20197;&#21450;&#24322;&#24120;&#22788;&#29702;&#12290;
&lt;/p&gt;
&lt;p&gt;
  &#31456;&#33410;&#30446;&#24405;&lt;br/&gt;
  &lt;a href="#sec-1"&gt;OCaml&#20013;&#35843;&#29992;C&#20989;&#25968;&#31034;&#20363;&lt;/a&gt;&lt;br/&gt;
  &lt;a href="#sec-2"&gt;value&#31867;&#22411;&lt;/a&gt;&lt;br/&gt;
  &lt;a href="#sec-3"&gt;C&#20013;&#34920;&#31034;OCaml&#25968;&#25454;&#31867;&#22411;&lt;/a&gt;&lt;br/&gt;
  &lt;a href="#sec-4"&gt;C&#20013;&#25805;&#20316;Ocaml values&lt;/a&gt;&lt;br/&gt;
  &lt;a href="#sec-5"&gt;&#19982;&#22403;&#22334;&#25910;&#38598;&#22120;&#21644;&#35856;&#30456;&#22788;&lt;/a&gt;&lt;br/&gt;
  &lt;a href="#sec-6"&gt;&#20174;C&#21040;OCaml&#30340;&#22238;&#35843;&lt;/a&gt;&lt;br/&gt;
  &lt;a href="#sec-7"&gt;&#23436;&#25972;&#31034;&#20363;:Win32&#19979;&#30340;kill&lt;/a&gt;
&lt;/p&gt;

&lt;div id="outline-container-ocaml_call_c_id" class="outline-3"&gt;
&lt;h3 id="ocaml_call_c_id"&gt;&lt;a name="sec-1" id="sec-1"&gt;&lt;/a&gt;OCaml&#20013;&#35843;&#29992;C&#20989;&#25968;&#31034;&#20363;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-ocaml_call_c_id"&gt;


&lt;p&gt;     
    &#20808;&#20197;&#26368;&#31616;&#21333;&#30340;hello world&#24320;&#22987;:
&lt;/p&gt;
&lt;p&gt;
    hello.ml
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span class="linenr"&gt;1:  &lt;/span&gt;&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;print_hello&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;unit &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; unit &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"caml_print_hello"&lt;/span&gt;
&lt;span class="linenr"&gt;2:  &lt;/span&gt;
&lt;span class="linenr"&gt;3:  &lt;/span&gt;&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;_ &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; print_hello &lt;span style="color: #a52a2a;"&gt;();;&lt;/span&gt;
&lt;span class="linenr"&gt;4:  &lt;/span&gt;
&lt;span class="linenr"&gt;5:  &lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;
    hello_stubs.c
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span class="linenr"&gt; 1:  &lt;/span&gt;&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span class="linenr"&gt; 2:  &lt;/span&gt;&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/mlvalues.h&amp;gt;&lt;/span&gt;
&lt;span class="linenr"&gt; 3:  &lt;/span&gt;&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/memory.h&amp;gt;&lt;/span&gt;
&lt;span class="linenr"&gt; 4:  &lt;/span&gt;
&lt;span class="linenr"&gt; 5:  &lt;/span&gt;CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt;
&lt;span class="linenr"&gt; 6:  &lt;/span&gt;&lt;span style="color: #ffe829;"&gt;caml_print_hello&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;unit&lt;/span&gt;)
&lt;span class="linenr"&gt; 7:  &lt;/span&gt;{
&lt;span class="linenr"&gt; 8:  &lt;/span&gt;    CAMLparam1(unit);
&lt;span class="linenr"&gt; 9:  &lt;/span&gt;
&lt;span class="linenr"&gt;10:  &lt;/span&gt;    printf(&lt;span style="color: #b643aa;"&gt;"Hello world!\n"&lt;/span&gt;);
&lt;span class="linenr"&gt;11:  &lt;/span&gt;    fflush(stdout);
&lt;span class="linenr"&gt;12:  &lt;/span&gt;
&lt;span class="linenr"&gt;13:  &lt;/span&gt;    CAMLreturn (Val_unit);
&lt;span class="linenr"&gt;14:  &lt;/span&gt;}
&lt;/pre&gt;


&lt;p&gt;
    &#32534;&#35793;&#24182;&#36816;&#34892;:
&lt;/p&gt;


&lt;pre class="example"&gt;&#23383;&#33410;&#30721;&#65306;
ocamlc -custom -o hello.exe hello.ml hello_stubs.c

&#26412;&#22320;&#20195;&#30721;:
ocamlopt -o hello.exe hello.ml hello_stubs.c

&#25191;&#34892;&#65306;
hello.exe
Hello world!
&lt;/pre&gt;


&lt;p&gt;
    &#25110;&#32773;&#22312;toplevel&#20013;&#20351;&#29992;:
&lt;/p&gt;


&lt;pre class="example"&gt;&#29983;&#25104;&#33258;&#23450;&#20041;&#30340;toplevel:
ocamlmktop -o hellotop.exe -custom  hello_stubs.c hello.ml

&#25191;&#34892;&#65306;
hellotop.exe

&#36755;&#20837; Hello.print_hello();;

Hello world!
- : unit = ()
&lt;/pre&gt;



&lt;/div&gt;

&lt;div id="outline-container-1-1" class="outline-4"&gt;
&lt;h4 id="sec-1-1"&gt;OCaml&#20013;&#22768;&#26126;&#20989;&#25968;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-1"&gt;


&lt;p&gt;   
   &#22312;OCaml&#20013;&#20351;&#29992; &lt;b&gt;external&lt;/b&gt; &#20851;&#38190;&#23383;&#22768;&#26126;C&#20989;&#25968;:
&lt;/p&gt;
&lt;p&gt;   
   &lt;b&gt;external&lt;/b&gt; &lt;i&gt;name&lt;/i&gt; : &lt;i&gt;type&lt;/i&gt; = &lt;i&gt;C-function-name&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;   
   C&#20989;&#25968;&#21517;&#19981;&#38656;&#35201;&#19982;OCaml&#30340;&#20989;&#25968;&#21517;&#30456;&#21516;&#12290;
&lt;/p&gt;
&lt;p&gt;
   &#22806;&#37096;&#20989;&#25968;&#22312;&#25509;&#21475;&#25991;&#20214;.mli&#20013;&#21487;&#20197;&#20316;&#20026;&#19968;&#33324;val&#22768;&#26126;:
&lt;/p&gt;
&lt;p&gt;   
   &lt;b&gt;val&lt;/b&gt; &lt;i&gt;name&lt;/i&gt; : &lt;i&gt;type&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;   
   &#36825;&#38544;&#34255;&#20102;&#20351;&#29992;C&#20989;&#25968;&#36827;&#34892;&#23454;&#29616;&#30340;&#32454;&#33410;,&#24403;&#28982;&#20063;&#21487;&#20197;&#26174;&#24335;&#22768;&#26126;&#20026;&#22806;&#37096;&#20989;&#25968;:
&lt;/p&gt;
&lt;p&gt;   
   &lt;b&gt;external&lt;/b&gt; &lt;i&gt;name&lt;/i&gt; : &lt;i&gt;type&lt;/i&gt; = &lt;i&gt;C-function-name&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;   
   &#21518;&#38754;&#30340;&#26041;&#27861;&#26356;&#39640;&#25928;&#65292;&#22240;&#20026;&#23427;&#20801;&#35768;&#27169;&#22359;&#30340;&#20351;&#29992;&#32773;&#30452;&#25509;&#35843;&#29992;C&#20989;&#25968;&#65292;&#32780;&#19981;&#26159;&#20808;&#35843;
   &#29992;&#30456;&#24212;&#30340;Caml&#20989;&#25968;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-1-2" class="outline-4"&gt;
&lt;h4 id="sec-1-2"&gt;C&#20013;&#23454;&#29616;&#20989;&#25968;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-1-2"&gt;


&lt;p&gt;     
     &#22914;&#26524;&#20989;&#25968;&#21442;&#25968;&#23567;&#20110;&#31561;&#20110;5&#20010;&#65292;&#21017;C&#20989;&#25968;&#25509;&#21463;&#25351;&#23450;&#20010;&#25968;&#30340;value&#31867;&#22411;&#21442;&#25968;&#65292;&#24182;&#36820;
     &#22238;&#19968;&#20010;value&#31867;&#22411;&#30340;&#32467;&#26524;&#12290;value&#31867;&#22411;&#29992;&#26469;&#34920;&#31034;Caml values&#12290;&#23427;&#32534;&#30721;&#20102;&#20960;&#31181;
     &#22522;&#26412;&#31867;&#22411;(&#25972;&#25968;&#65292;&#28014;&#28857;&#25968;&#65292;&#23383;&#31526;&#20018;&#65292;&amp;hellip;),&#36824;&#26377;Caml&#25968;&#25454;&#32467;&#26500;&#12290; &#21518;&#38754;&#20250;&#20171;&#32461;
     value&#31867;&#22411;&#30456;&#20851;&#30340;&#36716;&#25442;&#20989;&#25968;&#21644;&#23439;&#12290;
&lt;/p&gt;
&lt;p&gt;
     &#36229;&#36807;5&#20010;&#21442;&#25968;&#30340;&#20989;&#25968;&#38656;&#35201;&#23454;&#29616;&#20004;&#20010;C&#20989;&#25968;&#12290;&#31532;&#19968;&#20010;&#29992;&#20110;&#23383;&#33410;&#30721;&#32534;&#35793;&#22120;ocamlc,
     &#25509;&#21463;2&#20010;&#21442;&#25968;:&#25351;&#21521;Caml values&#25968;&#32452;&#30340;&#25351;&#38024;&#21644;&#34920;&#31034;&#21442;&#25968;&#20010;&#25968;&#30340;&#25972;&#25968;&#12290;
     &#21478;&#19968;&#20010;&#29992;&#20110;&#26412;&#22320;&#20195;&#30721;&#32534;&#35793;&#22120;ocamlopt,&#30452;&#25509;&#25509;&#21463;&#25152;&#26377;&#21442;&#25968;&#12290;&#20363;&#22914;,&#19979;&#38754;&#36825;&#20010;
     &#25509;&#21463;7&#20010;&#21442;&#25968;&#30340;&#20989;&#25968;add_nat&#65306;
&lt;/p&gt;


&lt;pre class="src src-c"&gt;CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;add_nat_native&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;nat1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;ofs1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;len1&lt;/span&gt;,
                              &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;nat2&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;ofs2&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;len2&lt;/span&gt;,
                              &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;carry_in&lt;/span&gt;)
{
  ...
}

CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;add_nat_bytecode&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; *&lt;span style="color: #1fe0e5;"&gt;argv&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;argn&lt;/span&gt;)
{
  &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt; add_nat_native(argv[0], argv[1], argv[2], argv[3],
                        argv[4], argv[5], argv[6]);
}
&lt;/pre&gt;

&lt;p&gt;
     &#22312;OCaml&#20013;&#24517;&#39035;&#25351;&#26126;&#36825;&#20004;&#20010;&#20989;&#25968;&#65306;
&lt;/p&gt;
&lt;p&gt;     
     &lt;b&gt;external&lt;/b&gt; &lt;i&gt;name&lt;/i&gt; : &lt;i&gt;type&lt;/i&gt; = &lt;i&gt;bytecode-C-function-name&lt;/i&gt;
     &lt;i&gt;native-code-C-function-name&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;     
     &#20363;&#22914;&#65292;add_nat&#22768;&#26126;&#22914;&#19979;:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;add_nat&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;nat &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; nat &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int&lt;/span&gt;
                &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"add_nat_bytecode"&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"add_nat_native"&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;
     &#23454;&#29616;&#19968;&#20010;&#20989;&#25968;&#23454;&#38469;&#19978;&#26377;&#20004;&#20010;&#27493;&#39588;&#65306;&lt;br/&gt;
     1&#65292;&#35299;&#30721;&#25351;&#23450;&#30340;Caml value&#21442;&#25968;&#21040;C value, &#32534;&#30721;&#36820;&#22238;&#20540;&#21040;&#19968;&#20010;Caml value&#65307;&lt;br/&gt;
     2&#65292;&#20174;&#21442;&#25968;&#35745;&#31639;&#20986;&#32467;&#26524;&#12290;
&lt;/p&gt;

&lt;p&gt;     
     &#38500;&#20102;&#38750;&#24120;&#31616;&#21333;&#30340;&#20989;&#25968;&#65292;&#26368;&#22909;&#37319;&#29992;&#20004;&#20010;&#20998;&#31163;&#30340;C&#20989;&#25968;&#26469;&#23454;&#29616;&#36825;&#20004;&#20010;&#27493;&#39588;&#12290;
     &#31532;&#19968;&#20010;&#20989;&#25968;&#23436;&#25104;&#23454;&#38469;&#30340;&#36816;&#31639;&#65292;&#25509;&#21463;C&#20540;&#20316;&#20026;&#21442;&#25968;&#24182;&#36820;&#22238;&#19968;&#20010;C&#20540;&#12290;
     &#31532;&#20108;&#20010;&#20989;&#25968;&#65292;&#20063;&#21483;&#20570;"stub code"&#65292;&#36890;&#36807;&#36716;&#25442;Caml values&#21442;&#25968;&#21040;C values,
     &#35843;&#29992;&#31532;&#19968;&#20010;&#20989;&#25968;&#65292;&#36716;&#25442;&#36820;&#22238;&#30340;C value&#21040;Caml value&#65292;&#26469;&#23545;&#31532;&#19968;&#20010;&#20989;&#25968;&#36827;&#34892;&#31616;
     &#21333;&#22320;&#21253;&#35013;&#12290;&#20363;&#22914;&#65292;&#20197;&#19979;&#30340;stub code:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;input&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;channel&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;buffer&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;offset&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;length&lt;/span&gt;)
{
  &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt; Val_long(getblock((&lt;span style="color: #6e9ac9;"&gt;struct&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;channel&lt;/span&gt;*) channel,
                          &amp;amp;Byte(buffer, Long_val(offset)),
                          Long_val(length)));
}
&lt;/pre&gt;

&lt;p&gt;
     (&#36825;&#37324;&#30340;Val_long,Long_val&#26159;value&#31867;&#22411;&#30340;&#36716;&#25442;&#23439;&#65292;&#21518;&#38754;&#23558;&#20250;&#35752;&#35770;&#12290;
     CAMLprim&#23439;&#29992;&#26469;&#20445;&#35777;&#36825;&#20010;&#20989;&#25968;&#26159;&#23548;&#20986;&#30340;&#65292;&#24182;&#19988;&#21487;&#20197;&#34987;Caml&#35775;&#38382;).&#20027;&#35201;&#24037;&#20316;
     &#37117;&#26377;getblock&#26469;&#23436;&#25104;&#12290;
&lt;/p&gt;
&lt;p&gt;
     &#20351;&#29992;C&#20195;&#30721;&#25805;&#20316;OCaml values,&#21487;&#20197;&#20351;&#29992;&#20197;&#19979;&#22836;&#25991;&#20214;&#65306;
&lt;/p&gt;&lt;table  border="2" cellspacing="0" cellpadding="6" rules="groups" frame="border"&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;colgroup&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#22836;&#25991;&#20214;&lt;/td&gt;&lt;td class="left"&gt;&#25552;&#20379;&#21151;&#33021;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/mlvalues.h&lt;/td&gt;&lt;td class="left"&gt;&#23450;&#20041;value&#31867;&#22411;&#21644;&#36716;&#25442;&#23439;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/alloc.h&lt;/td&gt;&lt;td class="left"&gt;&#20998;&#37197;&#20989;&#25968;(&#29992;&#20110;&#21019;&#24314;&#32467;&#26500;&#21270;&#30340;Caml&#23545;&#35937;)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/memory.h&lt;/td&gt;&lt;td class="left"&gt;&#21508;&#31181;&#20869;&#23384;&#30456;&#20851;&#30340;&#20989;&#25968;&#21644;&#23439;(&#20027;&#35201;&#26159;GC&#25509;&#21475;)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/fail.h&lt;/td&gt;&lt;td class="left"&gt;&#24341;&#21457;&#24322;&#24120;&#30340;&#20989;&#25968;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/callback.h&lt;/td&gt;&lt;td class="left"&gt;&#20174;C&#21040;Caml&#30340;&#22238;&#35843;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/custom.h&lt;/td&gt;&lt;td class="left"&gt;&#33258;&#23450;&#20041;&#22359;&#30340;&#25805;&#20316;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/intext.h&lt;/td&gt;&lt;td class="left"&gt;&#23545;&#33258;&#23450;&#20041;&#22359;&#36827;&#34892;&#29992;&#25143;&#23450;&#20041;&#30340;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#25805;&#20316;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;caml/threads.h&lt;/td&gt;&lt;td class="left"&gt;&#22810;&#32447;&#31243;&#25805;&#20316;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-value_type_id" class="outline-3"&gt;
&lt;h3 id="value_type_id"&gt;&lt;a name="sec-2" id="sec-2"&gt;&lt;/a&gt;value&#31867;&#22411;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-value_type_id"&gt;


&lt;p&gt;   
   &#19968;&#20010;value&#31867;&#22411;&#30340;&#23545;&#35937;&#21487;&#20197;&#26159;&#65306;
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#19968;&#20010;&#25972;&#25968;
&lt;/li&gt;
&lt;li&gt;&#19968;&#20010;&#25351;&#21521;&#22534;&#20013;&#20869;&#23384;&#22359;&#30340;&#25351;&#38024; (&#27604;&#22914;caml_alloc_*&#20998;&#37197;&#30340;&#20869;&#23384;&#22359;) 
&lt;/li&gt;
&lt;li&gt;&#19968;&#20010;&#25351;&#21521;&#22534;&#22806;&#30340;&#23545;&#35937;&#30340;&#25351;&#38024; (&#27604;&#22914;malloc&#20998;&#37197;&#30340;&#20869;&#23384;&#22359;&#65292;&#25110;&#32773;&#19968;&#20010;C&#21464;&#37327;)&#12290;
&lt;/li&gt;
&lt;/ul&gt;



&lt;/div&gt;

&lt;div id="outline-container-2-1" class="outline-4"&gt;
&lt;h4 id="sec-2-1"&gt;&#25972;&#22411;value&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-1"&gt;

&lt;p&gt;    &#25972;&#22411;values&#20351;&#29992;31-bit&#26377;&#31526;&#21495;&#25972;&#25968;(64&#20301;&#26550;&#26500;&#19978;&#20351;&#29992;63-bit)&#12290;&#23427;&#20204;&#23646;&#20110;
    unboxed(unallocated&#65292;&#19981;&#36827;&#34892;&#20869;&#23384;&#20998;&#37197;&#65292;&#20063;&#23601;&#26159;&#30452;&#25509;&#23384;&#25918;&#22312;cpu&#23492;&#23384;&#22120;&#20013;)&#12290;
    ocaml&#20013;char, bool, int&#37117;&#29992;&#25972;&#22411;&#34920;&#31034;&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2-2" class="outline-4"&gt;
&lt;h4 id="sec-2-2"&gt;&#22359;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-2"&gt;

&lt;p&gt;    &#22534;(ocaml&#20013;&#23384;&#25918;&#25968;&#25454;&#30340;&#22534;&#65292;&#38500;&#20102;&#25972;&#22411;value&#37117;&#22312;&#27492;&#22534;&#19978;&#20998;&#37197;&#12289;&#37322;&#25918;)&#19978;
    &#30340;&#22359;&#34987;&#22403;&#22334;&#25910;&#38598;&#22120;&#31649;&#29702;&#65292;&#22240;&#27492;&#26377;&#19968;&#20123;&#20005;&#26684;&#30340;&#38480;&#21046;&#12290;&#27599;&#20010;&#22359;&#37117;&#26377;&#19968;&#20010;&#22836;&#21253;&#21547;
    &#36825;&#20010;&#22359;&#30340;&#22823;&#23567;(&#20197;word&#20026;&#21333;&#20301;)&#21644;&#36825;&#20010;&#22359;&#30340;tag&#12290; tag&#34920;&#31034;&#22359;&#30340;&#20869;&#23481;&#22914;&#20309;&#32452;&#32455;&#12290;
    &#19968;&#20010;&#23567;&#20110; &lt;b&gt;No_scan_tag&lt;/b&gt; &#30340;tag&#34920;&#31034;&#19968;&#20010;&#32467;&#26500;&#21270;&#30340;&#22359;&#65292;&#21253;&#21547;&#20102;&#32467;&#26500;&#33391;&#22909;&#30340;value&#65292;
    &#23427;&#20250;&#34987;&#22403;&#22334;&#25910;&#38598;&#22120;&#24490;&#29615;&#36941;&#21382;&#25195;&#25551;&#27599;&#20010;&#23383;&#27573;&#12290;&#19968;&#20010;&#22823;&#20110;&#31561;&#20110; &lt;b&gt;No_scan_tag&lt;/b&gt;
    &#30340;tag&#26159;&#19968;&#20010;&#21407;&#22987;&#22359;&#65292;&#23427;&#30340;&#20869;&#23481;&#19981;&#20250;&#34987;&#22403;&#22334;&#25910;&#38598;&#22120;&#25195;&#25551;&#12290;
&lt;/p&gt;&lt;table  border="2" cellspacing="0" cellpadding="6" rules="groups" frame="border"&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;colgroup&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class="left"&gt;Tag&lt;/td&gt;&lt;td class="left"&gt;&#22359;&#30340;&#20869;&#23481;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;0 to No_scan_tag - 1&lt;/td&gt;&lt;td class="left"&gt;&#32467;&#26500;&#21270;&#30340;&#22359;(Caml&#23545;&#35937;&#30340;&#25968;&#32452;)&#12290;&#27599;&#20010;&#23383;&#27573;&#20026;&#19968;&#20010;value&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;Closure_tag&lt;/td&gt;&lt;td class="left"&gt;&#19968;&#20010;&#20989;&#25968;&#38381;&#21253;&#12290;&#31532;&#19968;&#20010;&#23383;&#27573;&#20026;&#25351;&#21521;&#20195;&#30721;&#30340;&#25351;&#38024;&#65292;&#21518;&#38754;&#30340;&#23383;&#27573;&#20026;&#29615;&#22659;&#20013;&#30340;value&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;String_tag&lt;/td&gt;&lt;td class="left"&gt;&#19968;&#20010;&#23383;&#31526;&#20018;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;Double_tag&lt;/td&gt;&lt;td class="left"&gt;&#19968;&#20010;&#21452;&#31934;&#24230;&#28014;&#28857;&#25968;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;Double_array_tag&lt;/td&gt;&lt;td class="left"&gt;&#19968;&#20010;&#21452;&#31934;&#24230;&#28014;&#28857;&#25968;&#32452;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;Abstract_tag&lt;/td&gt;&lt;td class="left"&gt;&#19968;&#20010;&#25277;&#35937;&#25968;&#25454;&#31867;&#22411;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;Custom_tag&lt;/td&gt;&lt;td class="left"&gt;&#19968;&#20010;&#25277;&#35937;&#25968;&#25454;&#31867;&#22411;&#65292;&#21253;&#21547;&#20102;&#29992;&#25143;&#23450;&#20041;&#30340;&#26512;&#26500;&#65292;&#27604;&#36739;&#65292;&#21704;&#24076;&#65292;&#24207;&#21015;&#21270;&#21644;&#21453;&#24207;&#21015;&#21270;&#30456;&#20851;&#20989;&#25968;&#12290;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2-3" class="outline-4"&gt;
&lt;h4 id="sec-2-3"&gt;&#22534;&#22806;&#30340;&#25351;&#38024;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-3"&gt;

&lt;p&gt;    &#20219;&#20309;&#22312;&#22534;&#22806;&#20197;&#23383;&#23545;&#40784;&#30340;&#25351;&#38024;&#37117;&#21487;&#20197;&#23433;&#20840;&#22320;&#21644;value&#31867;&#22411;&#30456;&#20114;&#36716;&#25442;&#12290;&#36825;&#21253;&#25324;
    malloc&#36820;&#22238;&#30340;&#25351;&#38024;&#65292;&#20351;&#29992;&amp;amp;&#25805;&#20316;&#31526;&#33719;&#24471;&#30340;C&#21464;&#37327;&#25351;&#38024;(&#26368;&#23567;&#20026;&#19968;&#20010;&#23383;)&#12290;
&lt;/p&gt;
&lt;p&gt;
    &#27880;&#24847;&#65306;&#22914;&#26524;malloc&#36820;&#22238;&#30340;&#25351;&#38024;&#36716;&#25442;&#20026;value&#31867;&#22411;&#24182;&#36820;&#22238;&#21040;Caml&#65292;&#20351;&#29992;free&#36827;
    &#34892;&#26174;&#24335;&#20869;&#23384;&#22238;&#25910;&#26159;&#24456;&#21361;&#38505;&#30340;&#65292;&#22240;&#20026;&#36825;&#20010;&#25351;&#38024;&#22312;Caml&#20013;&#21487;&#33021;&#20173;&#28982;&#26377;&#25928;&#12290;&#26356;&#31967;
    &#30340;&#26159;&#65292;&#20351;&#29992;free&#22238;&#25910;&#20869;&#23384;&#21487;&#20197;&#27604;Caml&#22534;&#37325;&#20998;&#37197;&#26202;&#65292;&#21407;&#20808;&#25351;&#21521;Caml&#22534;&#22806;&#38754;&#30340;&#25351;&#38024;
    &#29616;&#22312;&#25351;&#21521;&#20102;Caml&#22534;&#20869;&#37096;&#65292;&#36896;&#25104;&#22403;&#22334;&#25910;&#38598;&#22120;&#28151;&#20081;&#12290;&#20026;&#20102;&#36991;&#20813;&#36825;&#20123;&#38382;&#39064;&#65292;&#25512;&#33616;&#25226;
    &#25351;&#38024;&#23553;&#35013;&#20026;&#19968;&#20010;Caml&#22359;&#65292;&#21487;&#20197;&#29992;Abstract_tag&#25110;Custom_tag&#12290;
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2-4" class="outline-4"&gt;
&lt;h4 id="sec-2-4"&gt;&#31034;&#20363;:inspector&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-2-4"&gt;

&lt;p&gt;     &#30693;&#36947;&#20102;OCaml value&#22312;C&#20013;&#30340;&#34920;&#31034;&#26041;&#24335;,&#23601;&#21487;&#20197;&#22312;C&#20013;&#32534;&#20889;&#20989;&#25968;&#26597;&#30475;&#36825;&#20123;&#24213;&#23618;
     &#34920;&#31034;.
     &#27492;&#31034;&#20363;&#23454;&#29616;&#35835;&#21462;value&#24182;&#36755;&#20986;value&#30340;&#31867;&#22411;.
&lt;/p&gt;
&lt;p&gt;     
     inspect_stubs.c
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/mlvalues.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/memory.h&amp;gt;&lt;/span&gt;


&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#32553;&amp;#36827;&amp;#26174;&amp;#31034; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;margin&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;n&lt;/span&gt;)
{
    &lt;span style="color: #6e9ac9;"&gt;while&lt;/span&gt; (n-- &amp;gt; 0)  printf(&lt;span style="color: #b643aa;"&gt;"."&lt;/span&gt;);
    &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt;;
}

&lt;span style="color: #a36238;"&gt;/*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#36755;&amp;#20986;OCaml value&amp;#30340;&amp;#31867;&amp;#22411;                                &lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * v, OCaml value                                   &lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * m, &amp;#32553;&amp;#36827;&amp;#23485;&amp;#24230;                                      &lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;print_block&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;m&lt;/span&gt;)
{
    &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;size&lt;/span&gt;, &lt;span style="color: #1fe0e5;"&gt;i&lt;/span&gt;;
    margin(m);
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (Is_long(v)) {
        printf(&lt;span style="color: #b643aa;"&gt;"&amp;#30452;&amp;#25509;&amp;#37327; (%d)\n"&lt;/span&gt;, Long_val(v));
        &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt;;
    }

    printf (&lt;span style="color: #b643aa;"&gt;"&amp;#20869;&amp;#23384;&amp;#22359;: &amp;#22823;&amp;#23567;=%d  -  "&lt;/span&gt;, size = Wosize_val(v));
    &lt;span style="color: #6e9ac9;"&gt;switch&lt;/span&gt; (Tag_val(v)) {
    &lt;span style="color: #6e9ac9;"&gt;case&lt;/span&gt; Closure_tag:
        printf (&lt;span style="color: #b643aa;"&gt;"&amp;#38381;&amp;#21253;:&amp;#21253;&amp;#21547; %d &amp;#20010;&amp;#33258;&amp;#30001;&amp;#21464;&amp;#37327;\n"&lt;/span&gt;, size - 1);
        margin(m+4);
        printf(&lt;span style="color: #b643aa;"&gt;"&amp;#20195;&amp;#30721;&amp;#25351;&amp;#38024;: %p\n"&lt;/span&gt;, Code_val(v));
        &lt;span style="color: #6e9ac9;"&gt;for&lt;/span&gt; (i = 1; i &amp;lt; size; i++) print_block(Field(v,i), m+4);
        &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
    &lt;span style="color: #6e9ac9;"&gt;case&lt;/span&gt; String_tag:
        printf (&lt;span style="color: #b643aa;"&gt;"&amp;#23383;&amp;#31526;&amp;#20018;: %s (%s)\n"&lt;/span&gt;, String_val(v), (&lt;span style="color: #93e93f;"&gt;char&lt;/span&gt; *) v);
        &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
    &lt;span style="color: #6e9ac9;"&gt;case&lt;/span&gt; Double_tag:
        printf (&lt;span style="color: #b643aa;"&gt;"&amp;#28014;&amp;#28857;&amp;#25968;: %g\n"&lt;/span&gt;, Double_val(v));
        &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
    &lt;span style="color: #6e9ac9;"&gt;case&lt;/span&gt; Double_array_tag:
        printf (&lt;span style="color: #b643aa;"&gt;"&amp;#28014;&amp;#28857;&amp;#25968;&amp;#32452;: "&lt;/span&gt;);
        &lt;span style="color: #6e9ac9;"&gt;for&lt;/span&gt; (i = 0; i &amp;lt; size / Double_wosize; i ++ )
            printf(&lt;span style="color: #b643aa;"&gt;"  %g"&lt;/span&gt;, Double_field(v, i));
        printf(&lt;span style="color: #b643aa;"&gt;"\n"&lt;/span&gt;);
        &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
    &lt;span style="color: #6e9ac9;"&gt;case&lt;/span&gt; Abstract_tag:
        printf (&lt;span style="color: #b643aa;"&gt;"&amp;#25277;&amp;#35937;&amp;#31867;&amp;#22411;\n"&lt;/span&gt;);
        &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
    &lt;span style="color: #6e9ac9;"&gt;case&lt;/span&gt; Custom_tag:
        printf (&lt;span style="color: #b643aa;"&gt;"&amp;#25277;&amp;#35937;&amp;#31867;&amp;#22411;,&amp;#21253;&amp;#21547;&amp;#29992;&amp;#25143;&amp;#33258;&amp;#23450;&amp;#20041;&amp;#30340;&amp;#26512;&amp;#26500;&amp;#20989;&amp;#25968;...\n"&lt;/span&gt;);
        &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
    &lt;span style="color: #6e9ac9;"&gt;default&lt;/span&gt;:
        &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (Tag_val(v) &amp;gt;= No_scan_tag) {
            printf (&lt;span style="color: #b643aa;"&gt;"&amp;#26410;&amp;#30693;tag"&lt;/span&gt;);
            &lt;span style="color: #6e9ac9;"&gt;break&lt;/span&gt;;
        }
        printf (&lt;span style="color: #b643aa;"&gt;"structured block (tag = %d):\n"&lt;/span&gt;, Tag_val(v));
        &lt;span style="color: #6e9ac9;"&gt;for&lt;/span&gt; (i = 0; i &amp;lt; size; i++)
            print_block(Field(v, i), m+4);
    }
    &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt;;
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#21253;&amp;#35013;&amp;#20989;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt;
&lt;span style="color: #ffe829;"&gt;inspect_block&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v&lt;/span&gt;)
{
    CAMLparam1(v);

    print_block (v, 4);
    fflush(stdout);

    CAMLreturn (v);
}

&lt;/pre&gt;

&lt;p&gt;
     inspector.ml
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;inspect &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;'&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;a &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;'&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;a &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"inspect_block"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;

print_endline &lt;span style="color: #b643aa;"&gt;"&amp;#20351;&amp;#29992;Inspector.inspect&amp;#26597;&amp;#30475;OCaml value\n"&lt;/span&gt;
&lt;/pre&gt;

&lt;p&gt;
     &#27880;&#24847;&#36825;&#20004;&#20010;&#25991;&#20214;&#37117;&#29992;cp936&#32534;&#30721;&#20445;&#23384;(&#34429;&#28982;ocaml&#35201;&#27714;&#28304;&#25991;&#20214;&#37117;&#29992;utf-8&#32534;&#30721;),&#21542;
     &#21017;cmd&#20250;&#26174;&#31034;&#20081;&#30721;.&#32534;&#35793;&#24182;&#25191;&#34892;:
&lt;/p&gt;



&lt;pre class="example"&gt;ocamlmktop -custom -o inspector.exe inspector.ml inspect_stubs.c
inspector.exe
&lt;/pre&gt;

&lt;p&gt;
     &#36827;&#34892;&#27979;&#35797;:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect 5&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#27979;&amp;#35797;&amp;#25972;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;5&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 5
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #b643aa;"&gt;"string"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#23383;&amp;#31526;&amp;#20018; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;&amp;#23383;&amp;#31526;&amp;#20018;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;string &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;string&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;string &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"string"&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #008b8b;"&gt;false&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;bool &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #008b8b;"&gt;false&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 2&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 3&lt;span style="color: #a52a2a;"&gt;];;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#21015;&amp;#34920; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  structured block &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;tag &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 0&lt;span style="color: #a52a2a;"&gt;):&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;1&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  structured block &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;tag &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 0&lt;span style="color: #a52a2a;"&gt;):&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;............&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;2&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;............&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  structured block &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;tag &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 0&lt;span style="color: #a52a2a;"&gt;):&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;................&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;3&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;................&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int list &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 2&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 3&lt;span style="color: #a52a2a;"&gt;]&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;[|&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 2&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 3&lt;span style="color: #a52a2a;"&gt;|];;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25968;&amp;#32452; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;3  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  structured block &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;tag &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 0&lt;span style="color: #a52a2a;"&gt;):&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;1&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;2&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;3&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int array &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[|&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 2&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 3&lt;span style="color: #a52a2a;"&gt;|]&lt;/span&gt;

&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect 3.14&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#28014;&amp;#28857;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;&amp;#28014;&amp;#28857;&amp;#25968;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;3.14&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;float &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 3.14
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;[|&lt;/span&gt; 1.11&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 2.22&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 3.33 &lt;span style="color: #a52a2a;"&gt;|];;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#28014;&amp;#28857;&amp;#25968;&amp;#32452; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;6  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;&amp;#28014;&amp;#28857;&amp;#25968;&amp;#32452;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;   &lt;span style="color: #93e93f;"&gt;1.11  2.22  3.33&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;float array &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[|&lt;/span&gt;1.11&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 2.22&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; 3.33&lt;span style="color: #a52a2a;"&gt;|]&lt;/span&gt;

&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;add&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; x y &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; x &lt;span style="color: #a52a2a;"&gt;+&lt;/span&gt; y&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; 
&lt;span style="color: #0000ff; font-weight: bold;"&gt;val&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;add &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect add&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#20989;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;1  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;&amp;#38381;&amp;#21253;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#21253;&amp;#21547; 0 &amp;#20010;&amp;#33258;&amp;#30001;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20195;&amp;#30721;&amp;#25351;&amp;#38024;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;002EC9A8&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;add1 &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; add 5&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;
&lt;span style="color: #0000ff; font-weight: bold;"&gt;val&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;add1 &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;&amp;gt;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect add1&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#26607;&amp;#37324;&amp;#21270;&amp;#20989;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;3  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;&amp;#38381;&amp;#21253;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#21253;&amp;#21547; 2 &amp;#20010;&amp;#33258;&amp;#30001;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20195;&amp;#30721;&amp;#25351;&amp;#38024;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;002EC9A4&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;1  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;&amp;#38381;&amp;#21253;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#21253;&amp;#21547; 0 &amp;#20010;&amp;#33258;&amp;#30001;&amp;#21464;&amp;#37327;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;............&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20195;&amp;#30721;&amp;#25351;&amp;#38024;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;002EC9A8&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;5&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;&amp;lt;&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;&amp;gt;&lt;/span&gt;

&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;point &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;{&lt;/span&gt;  &lt;span style="color: #1fe0e5;"&gt;x&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;y&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;};;&lt;/span&gt;
&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;point &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;{&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;x&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;y&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;}&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;{&lt;/span&gt; x &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 600&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; y &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 480 &lt;span style="color: #a52a2a;"&gt;}&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#27979;&amp;#35797;record &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  structured block &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;tag &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 0&lt;span style="color: #a52a2a;"&gt;):&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;600&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;480&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;point &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;{&lt;/span&gt;x &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 600&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; y &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 480&lt;span style="color: #a52a2a;"&gt;}&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;
     &#36825;&#23601;&#26159;&#25152;&#26377;&#30340;OCaml&#25968;&#25454;&#31867;&#22411;&#20102;,&#19982;C&#20570;&#19968;&#19979;&#27604;&#36739;:
     char, bool, int&#37117;&#20316;&#20026;int&#30452;&#25509;&#37327;,&#19982;C&#30340;char, bool, int&#30456;&#20284;;Tag&#20026;0&#30340;
     &#22359;&#19982;C&#30340;&#25968;&#32452;&#30456;&#20284;; OCaml&#20013;&#30340;&#28014;&#28857;&#25968;&#20351;&#29992;&#22359;&#26469;&#23454;&#29616;,&#19981;&#36807;&#19987;&#38376;&#25552;&#20379;&#20102;Double_tag&#20316;
     &#20248;&#21270;.string&#20063;&#26377;&#19968;&#20010;&#19987;&#38376;&#30340;Tag&#34920;&#31034;,&#20989;&#25968;&#20063;&#26159;&#25968;&#25454;&#31867;&#22411;&#30340;&#19968;&#31181;,    
     OCaml&#20013;&#30340;&#29992;&#25143;&#33258;&#23450;&#20041;&#31867;&#22411;(record)&#26159;&#20351;&#29992;array&#23454;&#29616;&#30340;. Abstract&#31867;&#22411;&#29992;
     &#26469;&#34920;&#31034;&#21482;&#30693;&#36947;&#36825;&#20010;&#31867;&#22411;,&#20294;&#19981;&#30693;&#36947;&#20854;&#20855;&#20307;&#23454;&#29616;,&#29992;&#20110;&#22312;&#25509;&#21475;&#20013;&#38544;&#34255;&#31867;&#22411;&#30340;&#23454;&#29616;.
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-ocaml_type_in_c_id" class="outline-3"&gt;
&lt;h3 id="ocaml_type_in_c_id"&gt;&lt;a name="sec-3" id="sec-3"&gt;&lt;/a&gt;C&#20013;&#34920;&#31034;OCaml&#25968;&#25454;&#31867;&#22411;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-ocaml_type_in_c_id"&gt;


&lt;p&gt;    
   &#19979;&#38754;&#35762;&#35299;OCaml&#25968;&#25454;&#31867;&#22411;&#22914;&#20309;&#32534;&#30721;&#20026;value&#31867;&#22411;.
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-1" class="outline-4"&gt;
&lt;h4 id="sec-3-1"&gt;&#21407;&#23376;(Atomic)&#31867;&#22411;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-1"&gt;

&lt;table  border="2" cellspacing="0" cellpadding="6" rules="groups" frame="border"&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;colgroup&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class="left"&gt;Caml&#31867;&#22411;&lt;/td&gt;&lt;td class="left"&gt;&#32534;&#30721;&#26041;&#24335;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;int&lt;/td&gt;&lt;td class="left"&gt;Unboxed&#25972;&#25968;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;char&lt;/td&gt;&lt;td class="left"&gt;Unboxed&#25972;&#25968;(ASCII&#30721;)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;float&lt;/td&gt;&lt;td class="left"&gt;tag&#20026;Double_tag&#30340;&#22359;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;string&lt;/td&gt;&lt;td class="left"&gt;tag&#20026;String_tag&#30340;&#22359;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;int32&lt;/td&gt;&lt;td class="left"&gt;tag&#20026;Custom_tag&#30340;&#22359;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;int64&lt;/td&gt;&lt;td class="left"&gt;tag&#20026;Custom_tag&#30340;&#22359;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;nativeint&lt;/td&gt;&lt;td class="left"&gt;tag&#20026;Custom_tag&#30340;&#22359;&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-2" class="outline-4"&gt;
&lt;h4 id="sec-3-2"&gt;Tuples&#21644;records&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-2"&gt;

&lt;p&gt;    tuples&#20026;&#25351;&#21521;&#22359;&#30340;&#25351;&#38024;,&#20351;&#29992;tag 0.
    records&#20063;&#26159;tag&#20026;0&#30340;&#22359;.record&#31867;&#22411;&#20013;&#23383;&#27573;&#30340;&#39034;&#24207;&#20915;&#23450;&#20102;record&#30340;&#24067;&#23616;:&#31532;
    &#19968;&#20010;&#22768;&#26126;&#30340;&#23383;&#27573;&#23384;&#20648;&#22312;&#22359;&#20013;&#30340;&#23383;&#27573;0&#22788;,&#19982;&#23383;&#27573;&#20851;&#32852;&#30340;&#20540;&#23384;&#25918;&#22312;&#23383;&#27573;1&#20013;.
&lt;/p&gt;
&lt;p&gt;
    &#20026;&#20102;&#20248;&#21270;,&#25152;&#26377;&#23383;&#27573;&#37117;&#20026;float&#31867;&#22411;&#30340;record&#20316;&#20026;&#19968;&#20010;&#28014;&#28857;&#25968;&#25968;&#32452;&#34920;&#31034;,&#20351;&#29992;
    &lt;b&gt;Double_array_tag&lt;/b&gt;.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-3" class="outline-4"&gt;
&lt;h4 id="sec-3-3"&gt;&#25968;&#32452;(arrays)&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-3"&gt;

&lt;p&gt;    &#25972;&#25968;&#25110;&#25351;&#38024;&#25968;&#32452;&#34920;&#31034;&#20026;tuples,&#19968;&#20010;&#25351;&#21521;tag&#20026;0&#30340;&#22359;&#30340;&#25351;&#38024;. &#23427;&#20204;&#20351;&#29992;
    Field&#23439;&#36827;&#34892;&#35775;&#38382;,caml_modify&#20989;&#25968;&#20462;&#25913;.
&lt;/p&gt;
&lt;p&gt;
    &#28014;&#28857;&#25968;&#25968;&#32452;(&lt;b&gt;float array&lt;/b&gt; &#31867;&#22411;)&#26377;&#19968;&#20010;&#29305;&#27530;&#30340;,&#26410;&#23553;&#35013;&#30340;,&#26356;&#26377;&#25928;&#29575;&#30340;&#34920;
    &#31034;.&#36825;&#20123;&#25968;&#32452;&#34920;&#31034;&#20026;&#25351;&#21521;tag&#20026; &lt;b&gt;Double_array_tag&lt;/b&gt; &#30340;&#22359;&#30340;&#25351;&#38024;.&#36890;&#36807;
    &lt;b&gt;Double_field&lt;/b&gt; &#21644; &lt;b&gt;Store_double_field&lt;/b&gt; &#36827;&#34892;&#35775;&#38382;&#21644;&#20462;&#25913;.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-3-4" class="outline-4"&gt;
&lt;h4 id="sec-3-4"&gt;&#20855;&#20307;(Concrete)&#25968;&#25454;&#31867;&#22411;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-3-4"&gt;

&lt;table  border="2" cellspacing="0" cellpadding="6" rules="groups" frame="border"&gt;
&lt;caption&gt;&lt;/caption&gt;
&lt;colgroup&gt;&lt;col class="left" /&gt;&lt;col class="left" /&gt;
&lt;/colgroup&gt;
&lt;tbody&gt;
&lt;tr&gt;&lt;td class="left"&gt;&#20855;&#20307;&#39033;&lt;/td&gt;&lt;td class="left"&gt;&#34920;&#31034;&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;()&lt;/td&gt;&lt;td class="left"&gt;Val_int(0)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;false&lt;/td&gt;&lt;td class="left"&gt;Val_int(0)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;true&lt;/td&gt;&lt;td class="left"&gt;Val_int(1)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;[]&lt;/td&gt;&lt;td class="left"&gt;Val_int(0)&lt;/td&gt;&lt;/tr&gt;
&lt;tr&gt;&lt;td class="left"&gt;h::t&lt;/td&gt;&lt;td class="left"&gt;tag=0,size=2&#30340;&#22359;;&#31532;&#19968;&#20010;&#23383;&#27573;&#21253;&#21547;h,&#31532;&#20108;&#20010;&#23383;&#27573;&#20026;t&lt;/td&gt;&lt;/tr&gt;
&lt;/tbody&gt;
&lt;/table&gt;

     caml/mlvalues.h&#23450;&#20041;&#20102;&#23439; &lt;b&gt;Val_unit&lt;/b&gt;, &lt;b&gt;Val_false&lt;/b&gt;, &lt;b&gt;Val_true&lt;/b&gt;
     &#34920;&#31034;(), false&#21644;true.

&lt;p&gt;
&#21487;&#20197;&#20351;&#29992;inspector&#26597;&#30475;&#36825;&#20123;&#20540;:     
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;();;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;unit &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #008b8b;"&gt;false&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;bool &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #008b8b;"&gt;false&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #008b8b;"&gt;true&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;bool &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #008b8b;"&gt;true&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;[];;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;'&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;a list &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[]&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;#&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Inspector&lt;/span&gt;.inspect &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;::[]);;&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;....&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;&amp;#20869;&amp;#23384;&amp;#22359;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;&amp;#22823;&amp;#23567;&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;2  &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt;  structured block &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;tag &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 0&lt;span style="color: #a52a2a;"&gt;):&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;1&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;........&lt;/span&gt;&amp;#30452;&amp;#25509;&amp;#37327; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int list &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;1&lt;span style="color: #a52a2a;"&gt;]&lt;/span&gt;
&lt;/pre&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-c_opt_ocaml_value_id" class="outline-3"&gt;
&lt;h3 id="c_opt_ocaml_value_id"&gt;&lt;a name="sec-4" id="sec-4"&gt;&lt;/a&gt;C&#20013;&#25805;&#20316;Ocaml values&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-c_opt_ocaml_value_id"&gt;



&lt;/div&gt;

&lt;div id="outline-container-4-1" class="outline-4"&gt;
&lt;h4 id="sec-4-1"&gt;&#31867;&#22411;&#27979;&#35797;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-1"&gt;

&lt;ul&gt;
&lt;li&gt;Is_long(v) &#22914;&#26524;v&#26159;&#25972;&#25968;&#30452;&#25509;&#37327;&#36820;&#22238;true,&#21542;&#21017;&#20026;false
&lt;/li&gt;
&lt;li&gt;Is_block(v) &#22914;&#26524;v&#25351;&#21521;&#19968;&#20010;&#22359;&#21017;&#36820;&#22238;true,&#21542;&#21017;&#36820;&#22238;false
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4-2" class="outline-4"&gt;
&lt;h4 id="sec-4-2"&gt;&#25805;&#20316;&#25972;&#25968;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-2"&gt;

&lt;ul&gt;
&lt;li&gt;Val_long(l) &#36716;&#25442;C &lt;b&gt;long int&lt;/b&gt; l&#21040;OCaml value
&lt;/li&gt;
&lt;li&gt;Val_int(i) &#36716;&#25442; C &lt;b&gt;int&lt;/b&gt; i&#21040;OCaml value
&lt;/li&gt;
&lt;li&gt;Val_bool(x) &#36716;&#25442;C&#25972;&#25968;x&#21040;OCaml bool value
&lt;/li&gt;
&lt;li&gt;Long_val(v) &#36716;&#25442;OCaml v&#21040;C &lt;b&gt;long int&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;Int_Val(v) &#36716;&#25442;OCaml v&#21040;C &lt;b&gt;int&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;Bool_Val(v) &#22914;&#26524;OCaml bool v&#30340;&#20540;&#20026;false&#36820;&#22238;0, true&#36820;&#22238;1
&lt;/li&gt;
&lt;li&gt;Value_true, Value_false&#34920;&#31034;OCaml bool true&#21644;false
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4-3" class="outline-4"&gt;
&lt;h4 id="sec-4-3"&gt;&#35775;&#38382;&#22359;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-3"&gt;

&lt;ul&gt;
&lt;li&gt;Wosize_val(v) &#36820;&#22238;&#22359;v&#30340;size(&#20197;word&#20026;&#21333;&#20301;),&#19981;&#21253;&#21547;header.
&lt;/li&gt;
&lt;li&gt;Tag_val(v) &#36820;&#22238;&#22359;v&#30340;tag
&lt;/li&gt;
&lt;li&gt;Field(v, n) &#36820;&#22238;&#32467;&#26500;&#21270;&#22359;v&#31532;n&#20010;&#23383;&#27573;&#30340;value.&#23383;&#27573;&#30340;&#24207;&#21495;&#20174;0&#21040;
      Wosize_val(v)-1
&lt;/li&gt;
&lt;li&gt;Store_field(b, n, v) &#23384;&#20648;value v&#21040;value  b&#30340;&#31532;n&#20010;&#23383;&#27573;&#20013;,b&#24517;&#39035;&#20026;
      &#32467;&#26500;&#21270;&#22359;.
&lt;/li&gt;
&lt;li&gt;Code_val(v) &#36820;&#22238;&#38381;&#21253;v&#30340;&#20195;&#30721;&#37096;&#20998;
&lt;/li&gt;
&lt;li&gt;caml_string_length(v) &#36820;&#22238;string v&#30340;&#38271;&#24230;
&lt;/li&gt;
&lt;li&gt;Byte(v, n) &#36820;&#22238;string v&#30340;&#31532;n&#20010;&#23383;&#31526;,&#31867;&#22411;&#20026; &lt;b&gt;char&lt;/b&gt;.
&lt;/li&gt;
&lt;li&gt;Byte_u(v, n) &#36820;&#22238;string v&#30340;&#31532;n&#20010;&#23383;&#31526;,&#31867;&#22411;&#20026; &lt;b&gt;unsigend char&lt;/b&gt;.
&lt;/li&gt;
&lt;li&gt;String_val(v) &#36820;&#22238;&#25351;&#21521;string v&#30340;&#31532;&#19968;&#20010;&#23383;&#31526;&#30340;&#25351;&#38024;,&#31867;&#22411;&#20026;
      &lt;b&gt;char*&lt;/b&gt;. &#36825;&#20010;&#25351;&#38024;&#26159;&#19968;&#20010;&#26377;&#25928;&#30340;C&#23383;&#31526;&#20018;:&#23383;&#31526;&#20018;&#30340;&#26368;&#21518;&#19968;&#20010;&#23383;&#31526;&#20026;&#31354;&#23383;
      &#31526;null.&#20294;&#26159;OCaml&#23383;&#31526;&#20018;&#20013;&#21487;&#20197;&#21253;&#21547;&#31354;&#23383;&#31526;,&#36825;&#20250;&#35753;&#22823;&#22810;&#25968;&#25805;&#20316;&#23383;&#31526;&#20018;&#30340;
      C&#20989;&#25968;&#22833;&#36133;.
&lt;/li&gt;
&lt;li&gt;Double_val(v) &#36820;&#22238;&#19968;&#20010;&#28014;&#28857;&#25968;,&#31867;&#22411;&#20026; &lt;b&gt;double&lt;/b&gt;
&lt;/li&gt;
&lt;li&gt;Double_field(v, n) &#36820;&#22238;&#28014;&#28857;&#25968;&#32452;v(tag&#20026;Double_array_tag&#30340;&#22359;)&#30340;&#31532;
      n&#20010;&#20803;&#32032;.
&lt;/li&gt;
&lt;li&gt;Store_double_field(v, n, d) &#23384;&#20648;&#21452;&#31934;&#24230;&#28014;&#28857;&#25968;d&#21040;&#28014;&#28857;&#25968;&#32452;v&#30340;&#31532;n&#20010;
      &#20803;&#32032;&#20013;.
&lt;/li&gt;
&lt;li&gt;Data_custom_val(v) &#36820;&#22238;&#19968;&#20010;&#25351;&#21521;&#33258;&#23450;&#20041;&#22359;v&#30340;&#25968;&#25454;&#37096;&#20998;&#30340;&#25351;&#38024;.&#25351;&#38024;&#30340;
      &#31867;&#22411;&#20026; &lt;b&gt;void *&lt;/b&gt;,&#38656;&#35201;&#36716;&#25442;&#20026;&#33258;&#23450;&#20041;&#22359;&#21253;&#21547;&#30340;&#31867;&#22411;.
&lt;/li&gt;
&lt;li&gt;Int32_val(v) &#36820;&#22238; &lt;b&gt;int32 v&lt;/b&gt; &#21253;&#21547;&#30340;32&#20301;&#25972;&#25968;
&lt;/li&gt;
&lt;li&gt;Int64_val(v) &#36820;&#22238; &lt;b&gt;int64 v&lt;/b&gt; &#21253;&#21547;&#30340;64&#20301;&#25972;&#25968;
&lt;/li&gt;
&lt;li&gt;Nativeint_val(v) &#36820;&#22238; &lt;b&gt;nativeint v&lt;/b&gt; &#21253;&#21547;&#30340;&#38271;&#25972;&#22411;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   
    &#34920;&#36798;&#24335;Field(v, n), Byte(v, n)&#21644;Byte_u(v, n)&#26159;&#19968;&#20010;&#26377;&#25928;&#30340;&#24038;&#20540;.&#22240;&#27492;
    &#23427;&#20204;&#21487;&#20197;&#36890;&#36807;&#36171;&#20540;&#20462;&#25913;value v&#20013;&#30340;&#20540;. &#36171;&#20540;&#32473;Field(v, n)&#26102;&#35201;&#27880;&#24847;&#36991;&#20813;&#22403;&#22334;
    &#25910;&#38598;&#22120;&#20135;&#29983;&#38382;&#39064;.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4-4" class="outline-4"&gt;
&lt;h4 id="sec-4-4"&gt;&#20998;&#37197;OCaml&#22359;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-4"&gt;

&lt;p&gt;    &#20197;&#19979;&#20989;&#25968;&#22312;OCaml&#22534;&#19978;&#20998;&#37197;&#20869;&#23384;.
&lt;/p&gt;
&lt;p&gt;    
    &lt;b&gt;&#31616;&#21333;&#25509;&#21475;&lt;/b&gt;
&lt;/p&gt;
&lt;ul&gt;
&lt;li&gt;Atom(t) &#36820;&#22238;&#19968;&#20010;tag&#20026;t&#30340;"atom"(&#22823;&#23567;&#20026;0&#30340;&#22359;).
&lt;/li&gt;
&lt;li&gt;caml_alloc(n, t) &#36820;&#22238;&#19968;&#20010;tag&#20026;t,&#22823;&#23567;&#20026;n&#30340;&#22359;.&#22914;&#26524;t&#23567;&#20110;
      No_scan_tag,&#20026;&#20102;&#28385;&#36275;GC&#30340;&#32422;&#26463;,&#22359;&#20013;&#30340;&#23383;&#27573;&#34987;&#21021;&#22987;&#21270;&#20026;&#26377;&#25928;&#30340;value.
&lt;/li&gt;
&lt;li&gt;caml_alloc_tuple(n) &#36820;&#22238;&#19968;&#20010;n&#20010;&#23383;&#30340;&#22359;,tag&#20026;0
&lt;/li&gt;
&lt;li&gt;caml_alloc_string(n) &#36820;&#22238;&#19968;&#20010;&#38271;&#24230;&#20026;n&#30340;&#23383;&#31526;&#20018;value.&#23383;&#31526;&#20018;&#21021;&#22987;&#21270;
      &#20026;&#22403;&#22334;&#25968;&#25454;.
&lt;/li&gt;
&lt;li&gt;caml_copy_string(s) &#36820;&#22238;&#19968;&#20010;null&#32467;&#26463;&#30340;C&#23383;&#31526;&#20018;(&lt;b&gt;char *&lt;/b&gt;)&#30340;&#25335;&#36125;
&lt;/li&gt;
&lt;li&gt;caml_copy_double(d) &#36820;&#22238;&#19968;&#20010;&#20540;&#20026; &lt;b&gt;double&lt;/b&gt; d&#30340;&#28014;&#28857;value
&lt;/li&gt;
&lt;li&gt;caml_copy_int32(i), copy_int64(i)&#21644;caml_copy_nativeint(i)&#36820;&#22238;&#19968;
      &#20010;OCaml&#31867;&#22411;&#20026; &lt;b&gt;int32&lt;/b&gt;, &lt;b&gt;int64&lt;/b&gt; &#21644; &lt;b&gt;nativeint&lt;/b&gt; &#30340;value,&#20998;&#21035;&#20351;&#29992;
      &#25972;&#25968;i&#21021;&#22987;&#21270;.
&lt;/li&gt;
&lt;li&gt;caml_alloc_array(f, a) &#20998;&#37197;&#19968;&#20010;value&#25968;&#32452;,&#22312;&#36755;&#20837;&#25968;&#32452;a&#30340;&#27599;&#20010;&#20803;&#32032;
      &#19978;&#35843;&#29992;&#20989;&#25968;f&#29983;&#25104;&#30340;value(&#31867;&#20284;OCaml&#20013;&#30340;map). &#25968;&#32452;a&#26159;&#19968;&#20010;&#20197;&#31354;&#25351;&#38024;
      &#32467;&#23614;&#30340;&#25351;&#38024;&#25968;&#32452;. (&#19981;&#35201;&#20351;&#29992;&#36825;&#20010;&#20989;&#25968;&#26500;&#36896;&#28014;&#28857;&#25968;&#32452;)
&lt;/li&gt;
&lt;li&gt;caml_copy_string_array(p) &#20998;&#37197;&#19968;&#20010;&#23383;&#31526;&#20018;&#25968;&#32452;,&#20174;&#23383;&#31526;&#20018;&#25968;&#32452;&#25351;&#38024;
      p(&lt;b&gt;char **&lt;/b&gt;)&#22797;&#21046;.p&#24517;&#39035;&#20197;NULL&#32467;&#23614;.
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;
    &lt;b&gt;&#24213;&#23618;&#25509;&#21475;&lt;/b&gt;
&lt;/p&gt;
&lt;p&gt;    
    &#20197;&#19979;&#20989;&#25968;&#27604;caml_alloc&#26356;&#26377;&#25928;&#29575;,&#20294;&#26356;&#38590;&#20351;&#29992;.
&lt;/p&gt;
&lt;p&gt;    
    &#20174;&#20998;&#37197;&#20989;&#25968;&#30340;&#35266;&#28857;&#26469;&#30475;,&#22359;&#21487;&#20197;&#25353;&#29031;&#22823;&#23567;&#20998;&#20026;:&#22823;&#23567;&#20026;0&#30340;&#22359;,&#23567;&#22359;(size&#23567;&#20110;&#31561;&#20110;
    &lt;b&gt;Max_young_wosize&lt;/b&gt;),&#22823;&#22359;(size&#22823;&#20110; &lt;b&gt;Max_young_wosize&lt;/b&gt;).
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;caml_alloc_small(n, t) &#36820;&#22238;&#19968;&#20010;&#22823;&#23567;&#20026;n(&#21333;&#20301;&#20026;word,n &amp;lt;=
      &lt;b&gt;Max_young_wosize&lt;/b&gt;),tag&#20026;t&#30340;&#23567;&#22359;.&#22914;&#26524;&#36825;&#20010;&#22359;&#26159;&#19968;&#20010;&#32467;&#26500;&#21270;&#22359;
      (t &amp;lt; &lt;b&gt;No_scan_tag&lt;/b&gt;),&#37027;&#20040;&#36825;&#20010;&#22359;&#30340;&#23383;&#27573;(&#20998;&#37197;&#21518;&#21253;&#21547;&#30340;&#26159;&#22403;&#22334;)
      &#24517;&#39035;&#22312;&#19979;&#27425;&#20998;&#37197;&#21069;&#21021;&#22987;&#21270;(&#22312;&#22359;&#30340;&#23383;&#27573;&#19978;&#30452;&#25509;&#36171;&#20540;)&#20026;&#21512;&#27861;&#30340;value.
&lt;/li&gt;
&lt;li&gt;caml_alloc_shr(n, t) &#36820;&#22238;&#19968;&#20010;&#22823;&#23567;&#20026;n, tag&#20026;t&#30340;&#22359;.&#22823;&#23567;&#21487;&#20197;&#22823;&#20110;
      &lt;b&gt;Max_young_wosize&lt;/b&gt;.(&#20063;&#21487;&#20197;&#23567;&#20110;&#23427;,&#20294;&#26159;&#23427;&#27809;&#26377;caml_alloc_small&#26377;&#25928;
      &#29575;.) &#22914;&#26524;&#26159;&#19968;&#20010;&#32467;&#26500;&#21270;&#22359;,&#24517;&#39035;&#22312;&#19979;&#27425;&#20998;&#37197;&#21069;&#20351;&#29992;&#21512;&#27861;&#30340;value&#36827;&#34892;&#21021;&#22987;&#21270;
      (&#20351;&#29992;caml_initialize&#20989;&#25968;).
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;      
   &#20026;&#20160;&#20040;&#32467;&#26500;&#21270;&#30340;&#22359;&#38656;&#35201;&#22312;&#19979;&#27425;&#20998;&#37197;&#21069;&#21021;&#22987;&#21270;&#21602;?&#21069;&#38754;&#24050;&#32463;&#35762;&#36807;,&#32467;&#26500;&#21270;&#30340;&#22359;&#20250;&#34987;
   &#22403;&#22334;&#25910;&#38598;&#22120;&#36941;&#21382;&#27599;&#20010;&#23383;&#27573;.&#24403;&#36827;&#34892;&#20998;&#37197;&#20869;&#23384;&#30340;&#26102;&#20505;,&#26377;&#21487;&#33021;&#35302;&#21457;GC,&#22914;&#26524;&#27809;&#26377;
   &#21021;&#22987;&#21270;,GC&#23601;&#20250;&#35775;&#38382;&#22403;&#22334;&#25968;&#25454;,&#36896;&#25104;&#38169;&#35823;.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-4-5" class="outline-4"&gt;
&lt;h4 id="sec-4-5"&gt;&#24341;&#21457;&#24322;&#24120;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-4-5"&gt;


&lt;p&gt;    
    &#20004;&#20010;&#24341;&#21457;&#26631;&#20934;&#24322;&#24120;&#30340;&#20989;&#25968;: 
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;caml_failwith(s) &#21442;&#25968;s&#26159;&#19968;&#20010;&#31354;&#23383;&#31526;&#32467;&#23614;&#30340;C&#23383;&#31526;&#20018;(&#31867;&#22411;&#20026;char*),
      &#24341;&#21457; &lt;b&gt;Failure&lt;/b&gt; s&#24322;&#24120;.
&lt;/li&gt;
&lt;li&gt;caml_invalid_argument(s) &#24341;&#21457; &lt;b&gt;Invalid_argument&lt;/b&gt; s&#24322;&#24120;
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;   
    &#22312;C&#20013;&#24341;&#21457;&#20219;&#24847;&#24322;&#24120;&#35201;&#22797;&#26434;&#19968;&#28857;:&#24322;&#24120;&#26631;&#35782;&#31526;&#22312;OCaml&#20013;&#21160;&#24577;&#20998;&#37197;,&#28982;&#21518;&#27880;&#20876;
    &#32473;C&#36827;&#34892;&#36890;&#20449;,C&#20013;&#33719;&#24471;&#27492;&#24322;&#24120;&#26631;&#35782;&#31526;&#21518;,&#23601;&#21487;&#20197;&#20351;&#29992;&#19979;&#38754;&#30340;&#20989;&#25968;&#24341;&#21457;&#24322;&#24120;:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;caml_raise_constant(id) &#24341;&#21457;&#27809;&#26377;&#21442;&#25968;&#30340;&#24322;&#24120;id
&lt;/li&gt;
&lt;li&gt;caml_raise_with_arg(id, v) &#24341;&#21457;&#24102;&#26377;&#21442;&#25968;value v&#30340;&#24322;&#24120;id
&lt;/li&gt;
&lt;li&gt;caml_raise_with_args(id, n, v) &#24341;&#21457;&#24102;&#26377;&#21442;&#25968;value v[ 0 ],&amp;hellip;,v[n-1]&#30340;&#24322;&#24120;id
&lt;/li&gt;
&lt;li&gt;caml_raise_with_string(id, s) s&#26159;&#19968;&#20010;&#31354;&#23383;&#31526;&#32467;&#23614;&#30340;C&#23383;&#31526;&#20018;,&#24341;&#21457;&#24102;&#26377;&#21442;&#25968;s&#30340;&#25335;&#36125;&#30340;&#24322;&#24120;id.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-c_and_ocaml_gc_id" class="outline-3"&gt;
&lt;h3 id="c_and_ocaml_gc_id"&gt;&lt;a name="sec-5" id="sec-5"&gt;&lt;/a&gt;&#19982;&#22403;&#22334;&#25910;&#38598;&#22120;&#21644;&#35856;&#30456;&#22788;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-c_and_ocaml_gc_id"&gt;


&lt;p&gt;    
   &#20851;&#20110;OCaml GC&#30340;&#35814;&#32454;&#20449;&#24687;,&#21442;&#32771;&lt;a href="http://caml.inria.fr/pub/docs/oreilly-book/html/book-ora082.html"&gt;ocaml-ora ch.9 Garbage Collection&lt;/a&gt;&#12290;
&lt;/p&gt;
&lt;p&gt;
   &#22534;&#20013;&#19981;&#20351;&#29992;&#30340;&#22359;&#34987;&#22403;&#22334;&#25910;&#38598;&#22120;&#33258;&#21160;&#28165;&#29702;.&#36825;&#23601;&#38656;&#35201;C&#20195;&#30721;&#22312;&#25805;&#20316;&#22534;&#19978;&#20998;&#37197;&#30340;&#22359;&#26102;,
   &#36827;&#34892;&#19968;&#20123;&#21512;&#20316;.
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-5-1" class="outline-4"&gt;
&lt;h4 id="sec-5-1"&gt;&#31616;&#21333;&#25509;&#21475;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-5-1"&gt;


&lt;p&gt;     
     &#26412;&#33410;&#25551;&#36848;&#30340;&#25152;&#26377;&#23439;&#37117;&#22312; &lt;b&gt;memory.h&lt;/b&gt; &#20013;&#22768;&#26126;.
&lt;/p&gt;
&lt;p&gt;
     &lt;b&gt;&#35268;&#21017;1&lt;/b&gt; &lt;i&gt;&#19968;&#20010;&#21442;&#25968;&#31867;&#22411;&#25110;&#26412;&#22320;&#21464;&#37327;&#31867;&#22411;&#20026;value&#30340;&#20989;&#25968;&#24517;&#39035;&#35843;&#29992;CAMLparam       &#23439;&#24182;&#20351;&#29992;CAMLreturn, CAMLreturn0 &#25110; CAMLreturnT.&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
      &#26377;6&#20010; &lt;b&gt;CAMLparam&lt;/b&gt; &#23439;: &lt;b&gt;CAMLparam0&lt;/b&gt; &#33267; &lt;b&gt;CAMLparam5&lt;/b&gt;,
      &#20998;&#21035;&#25509;&#21463;0-5&#20010;&#21442;&#25968;.&#22914;&#26524; &lt;b&gt;value&lt;/b&gt; &#31867;&#22411;&#30340;&#20989;&#25968;&#21442;&#25968;&#23567;&#20110;&#31561;&#20110;5&#20010;,
      &#30452;&#25509;&#22312;&#36825;&#20123;&#21442;&#25968;&#19978;&#20351;&#29992;&#30456;&#24212;&#30340;&#23439;.&#22914;&#26524;&#36229;&#36807;5&#20010;,&#22312;&#21069;5&#20010;&#21442;&#25968;&#19978;&#20351;&#29992;
      &lt;b&gt;CAMLparam5&lt;/b&gt;,&#22312;&#21097;&#19979;&#30340;&#21442;&#25968;&#19978;&#20351;&#29992; &lt;b&gt;CAMLxparam&lt;/b&gt; &#23439;.
&lt;/p&gt;
&lt;p&gt;
      &lt;b&gt;CAMLreturn&lt;/b&gt; &#23439;&#29992;&#26469;&#20195;&#26367;C&#20851;&#38190;&#23383;return.&#25152;&#26377;x&#31867;&#22411;&#20026; &lt;b&gt;value&lt;/b&gt;
      &#30340; &lt;b&gt;return x&lt;/b&gt; &#24517;&#39035;&#20351;&#29992; &lt;b&gt;CAMLreturn (x)&lt;/b&gt; &#20195;&#26367;, &#25110;&#32773;&#29992;
      &lt;b&gt;CAMLreturnT (t, x)&lt;/b&gt; (t&#26159;x&#30340;&#31867;&#22411;);&#25152;&#26377;&#19981;&#24102;&#21442;&#25968;&#30340; &lt;b&gt;return&lt;/b&gt;
      &#20351;&#29992; &lt;b&gt;CAMLreturn0&lt;/b&gt; &#20195;&#26367;. &#22914;&#26524;&#20320;&#30340;C&#20989;&#25968;&#36820;&#22238;void,&#24517;&#39035;&#20351;&#29992;
      &lt;b&gt;CAMLreturn0&lt;/b&gt; . &#31034;&#20363;:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;foo&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v2&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v3&lt;/span&gt;)
{
  CAMLparam3 (v1, v2, v3);
  ...
  CAMLreturn0;
}
&lt;/pre&gt;


&lt;p&gt;
      &lt;b&gt;&#35268;&#21017;2&lt;/b&gt; &lt;i&gt;&#31867;&#22411;&#20026;value&#30340;&#23616;&#37096;&#21464;&#37327;&#24517;&#39035;&#20351;&#29992;CAMLlocal&#23439;&#22768;&#26126;.values&#25968;&#32452;        &#20351;&#29992;CAMLlocalN&#22768;&#26126;.&#36825;&#20123;&#23439;&#24517;&#39035;&#22312;&#20989;&#25968;&#24320;&#22836;&#20351;&#29992;,&#19981;&#33021;&#22312;&#23884;&#22871;&#22359;&#20013;.&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
       &lt;b&gt;CAMLlocal1&lt;/b&gt;  &#33267; &lt;b&gt;CAMLlocal5&lt;/b&gt; &#22768;&#26126;&#21644;&#21021;&#22987;&#21270;1-5&#20010;&#31867;&#22411;&#20026; &lt;b&gt;value&lt;/b&gt;
       &#30340;&#23616;&#37096;&#21464;&#37327;. &lt;b&gt;CAMLlocalN(x, n)&lt;/b&gt; &#22768;&#26126;&#21644;&#21021;&#22987;&#21270;&#19968;&#20010;&#31867;&#22411;&#20026; &lt;b&gt;value&lt;/b&gt;
       [n]&#30340;&#23616;&#37096;&#21464;&#37327;. &#22914;&#26524;&#38656;&#35201;&#36229;&#36807;5&#20010;&#23616;&#37096;&#21464;&#37327;,&#21487;&#20197;&#22810;&#27425;&#35843;&#29992;&#36825;&#20123;&#23439;. &#31034;
       &#20363;:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;bar&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v2&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v3&lt;/span&gt;)
{
  CAMLparam3 (v1, v2, v3);
  CAMLlocal1(result);
  result = caml_alloc (3, 0);
  ...
  CAMLreturn(result);
}
&lt;/pre&gt;


&lt;p&gt;       
       &lt;b&gt;&#35268;&#21017;3&lt;/b&gt; &lt;i&gt;&#32473;&#32467;&#26500;&#21270;&#22359;&#30340;&#23383;&#27573;&#36171;&#20540;&#24517;&#39035;&#20351;&#29992;Store_field&#23439;(&#19968;&#33324;&#22359;)&#25110;Store_double_field&#23439;(&#21253;&#21547;&#28014;&#28857;&#25968;&#30340;&#25968;&#32452;&#25110;records).&#20854;&#23427;&#31867;&#22411;&#30340;&#36171;&#20540;&#19981;&#35201;&#20351;&#29992;Store_field&#21644;Store_double_field.&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
        &lt;b&gt;Store_field (b, n, v)&lt;/b&gt; &#23384;&#20648;value v&#21040;value b&#30340;&#31532;n&#20010;&#23383;&#27573;,b
        &#24517;&#39035;&#20026;&#22359;(&lt;b&gt;Is_block&lt;/b&gt; (b)&#24517;&#39035;&#20026;true).
&lt;/p&gt;
&lt;p&gt;
        &#31034;&#20363;:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;bar&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v2&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v3&lt;/span&gt;)
{
  CAMLparam3 (v1, v2, v3);
  CAMLlocal1 (result);

  result = caml_alloc (3, 0);
  Store_field (result, 0, v1);
  Store_field (result, 1, v2);
  Store_field (result, 2, v3);

  CAMLreturn (result);
}
&lt;/pre&gt;


&lt;p&gt;
        &lt;b&gt;&#35268;&#21017;4&lt;/b&gt; &lt;i&gt;&#21253;&#21547;values&#30340;&#20840;&#23616;&#21464;&#37327;&#24517;&#39035;&#20351;&#29992;&#20989;&#25968;          caml_register_global_root&#27880;&#20876;&#21040;&#22403;&#22334;&#25910;&#38598;&#22120;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
         &#20351;&#29992; &lt;b&gt;caml_register_global_root(&amp;amp;v)&lt;/b&gt; &#27880;&#20876;&#20840;&#23616;&#21464;&#37327;v&#26102;,&#35201;&#22312;&#19968;&#20010;
         &#26377;&#25928;&#20540;&#31532;&#19968;&#27425;&#23384;&#20648;&#21040;v&#20043;&#21069;&#25110;&#20043;&#21518;&#35843;&#29992;. &#22312;&#27880;&#20876;&#21644;&#23384;&#20648;value&#20043;&#38388;&#19981;&#35201;
         &#35843;&#29992;&#20219;&#20309;OCaml runtime&#20989;&#25968;&#25110;&#23439;.
&lt;/p&gt;
&lt;p&gt;
         &#19968;&#20010;&#27880;&#20876;&#36807;&#30340;&#20840;&#23616;&#21464;&#37327;v&#21487;&#20197;&#35843;&#29992;
         &lt;b&gt;caml_remove_global_root(&amp;amp;v)&lt;/b&gt; &#21453;&#27880;
         &#20876;.
&lt;/p&gt;
&lt;p&gt;
         &#22914;&#26524;&#20840;&#23616;&#21464;&#37327;v&#30340;&#20869;&#23481;&#27880;&#20876;&#20043;&#21518;&#19981;&#20250;&#20462;&#25913;,&#21487;&#20197;&#20351;&#29992;&#24615;&#33021;&#26356;&#22909;&#30340;
         &lt;b&gt;caml_register_generational_global_root(&amp;amp;v)&lt;/b&gt; &#21644;
         &lt;b&gt;caml_remove_generational_global_root(&amp;amp;v)&lt;/b&gt; &#36827;&#34892;&#27880;&#20876;&#21644;&#21453;&#27880;&#20876;.
         &#22914;&#26524;&#38656;&#35201;&#36825;&#20876;&#35768;&#22810;&#20840;&#23616;&#21464;&#37327;,&#36825;&#33021;&#25913;&#21892;&#24615;&#33021;.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-5-2" class="outline-4"&gt;
&lt;h4 id="sec-5-2"&gt;&#24213;&#23618;&#25509;&#21475;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-5-2"&gt;

&lt;p&gt;     &#29616;&#22312;&#35762;&#35299;&#24213;&#23618;&#20998;&#37197;&#20989;&#25968;caml_alloc_small&#21644;caml_alloc_shr&#30340;&#30456;&#20851;&#35268;&#21017;.&#22914;
     &#26524;&#20320;&#21482;&#20351;&#29992;caml_alloc&#21017;&#21487;&#20197;&#24573;&#30053;&#36825;&#37096;&#20998;.
&lt;/p&gt;
&lt;p&gt;
     &lt;b&gt;&#35268;&#21017;5&lt;/b&gt; &lt;i&gt;&#22312;&#20351;&#29992;&#24213;&#23618;&#20989;&#25968;&#20998;&#37197;&#19968;&#20010;&#32467;&#26500;&#21270;&#22359;(&#22359;&#30340;tag&#23567;&#20110;No_scan_tag)&#20043;&#21518;,&#36825;&#20010;&#22359;&#30340;&#25152;&#26377;&#23383;&#27573;&#22312;&#19979;&#27425;&#20998;&#37197;&#25805;&#20316;&#20043;&#21069;&#24517;&#39035;&#21253;&#21547;&#26377;&#25928;&#20540;.&#22914;&#26524;&#36825;&#20010;&#22359;&#20351;       &#29992;caml_alloc_small&#20998;&#37197;,&#21487;&#20197;&#23545;&#22359;&#30340;&#23383;&#27573;&#36827;&#34892;&#30452;&#25509;&#36171;&#20540;:&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;      
      Field(v, n) = v&lt;sub&gt;n&lt;/sub&gt;;
&lt;/p&gt;
&lt;p&gt;      
      &lt;i&gt;&#22914;&#26524;&#20351;&#29992;caml_alloc_shr&#20998;&#37197;&#22359;,&#20351;&#29992;caml_initialize&#20989;&#25968;&#22635;&#20805;:&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;      
      caml_initialize(&amp;amp;Field(v, n), v&lt;sub&gt;n&lt;/sub&gt;);
&lt;/p&gt;
&lt;p&gt;
      &#19979;&#19968;&#27425;&#20998;&#37197;&#21487;&#33021;&#20250;&#35302;&#21457;&#22403;&#22334;&#25910;&#38598;&#22120;.&#22403;&#22334;&#25910;&#38598;&#22120;&#20551;&#23450;&#25152;&#26377;&#30340;&#32467;&#26500;&#21270;&#22359;&#21253;&#21547;
      &#26377;&#25928;&#30340;value.&#26032;&#21019;&#24314;&#30340;&#22359;&#21253;&#21547;&#38543;&#26426;&#25968;&#25454;,&#19968;&#33324;&#19981;&#33021;&#34920;&#31034;&#20026;&#26377;&#25928;value.
&lt;/p&gt;
&lt;p&gt;
      &#22914;&#26524;&#20320;&#38656;&#35201;&#22312;&#23383;&#27573;&#33719;&#24471;&#23427;&#20204;&#30340;&#20540;&#20043;&#21069;&#36827;&#34892;&#20998;&#37197;&#25805;&#20316;,&#39318;&#20808;&#20351;&#29992;&#19968;&#20010;&#24120;&#37327;
      value&#36827;&#34892;&#21021;&#22987;&#21270;(&#22914; &lt;b&gt;Val_unit&lt;/b&gt;),&#28982;&#21518;&#20998;&#37197;,&#28982;&#21518;&#20462;&#25913;&#23383;&#27573;&#20026;&#27491;&#30830;&#30340;
      value.
&lt;/p&gt;
&lt;p&gt;
      &lt;b&gt;&#35268;&#21017;6&lt;/b&gt; &lt;i&gt;&#23545;&#22359;&#30340;&#23383;&#27573;&#36827;&#34892;&#36171;&#20540;,&#20363;&#22914;&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;      
      Field(v, n) = w;
&lt;/p&gt;
&lt;p&gt;
      &lt;i&gt;&#21482;&#26377;&#22312;&#22359;v&#26159;&#26368;&#21518;&#19968;&#20010;&#20351;&#29992; caml_alloc_small &#20998;&#37197;&#30340;&#26102;&#20505;&#25165;&#23433;&#20840;;&#20063;&#23601;&#26159;&#35828;&#22312;&#20998;&#37197;v&#21644;&#23545;v&#30340;&#23383;&#27573;&#36827;&#34892;&#36171;&#20540;&#20043;&#38388;&#27809;&#26377;&#20854;&#23427;&#30340;&#20998;&#37197;&#25805;&#20316;.&#20854;&#23427;&#24773;&#20917;&#19979;,&#19981;&#35201;&#30452;&#25509;&#36171;&#20540;.&#22914;&#26524;&#19968;&#20010;&#22359;&#20351;&#29992;caml_alloc_shr&#20998;&#37197;,&#29992;caml_initialize&#36827;&#34892;&#31532;&#19968;&#27425;&#36171;&#20540;.&lt;/i&gt;
&lt;/p&gt;

&lt;p&gt;
      &lt;i&gt;&#20854;&#23427;&#24773;&#20917;&#19979;,&#20320;&#26159;&#26356;&#26032;&#19968;&#20010;&#24050;&#32463;&#21253;&#21547;&#26377;&#25928;&#20540;&#30340;&#23383;&#27573;;&#36825;&#26102;,&#20351;&#29992;       caml_modify &#20989;&#25968;:&lt;/i&gt;
&lt;/p&gt;
&lt;p&gt;
      caml_modify(&amp;amp;Field(v, n), w);
&lt;/p&gt;
&lt;p&gt;
      &#20026;&#20102;&#23637;&#31034;&#20197;&#19978;&#35268;&#21017;,&#36825;&#20010;C&#20989;&#25968;&#26500;&#36896;&#24182;&#36820;&#22238;&#19968;&#20010;&#21015;&#34920;,&#21253;&#21547;&#21442;&#25968;&#25351;&#23450;&#30340;&#20004;&#20010;
      &#25972;&#25968;.&#39318;&#20808;,&#25105;&#20204;&#20351;&#29992;&#31616;&#21333;&#20998;&#37197;&#20989;&#25968;:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #a36238;"&gt;//&lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#27880;&amp;#24847;OCaml&amp;#20013;&amp;#21015;&amp;#34920;&amp;#30340;&amp;#20869;&amp;#23384;&amp;#34920;&amp;#31034;,&amp;#21487;&amp;#20197;&amp;#20351;&amp;#29992;&amp;#21069;&amp;#38754;&amp;#30340;inspector&amp;#31243;&amp;#24207;&amp;#26597;&amp;#30475;&lt;/span&gt;
&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;alloc_list_int&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i2&lt;/span&gt;)
{
   CAMLparam0 ();
   CAMLlocal2 (result, r);

   r = caml_alloc(2, 0);
   Store_field(r, 0, Val_int(i2));
   Store_field(r, 1, Val_int(0));
   result = caml_alloc(2, 0);
   Store_field(result, 0, Val_int(i1));
   Store_field(result, 1, r);

   CAMLreturn (result);
}
&lt;/pre&gt;


&lt;p&gt;
      &#19979;&#38754;&#20351;&#29992;&#24213;&#23618;&#20998;&#37197;&#20989;&#25968; &lt;b&gt;caml_alloc_small&lt;/b&gt; :
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;alloc_list_int&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i2&lt;/span&gt;)
{
   CAMLparam0 ();
   CAMLlocal2 (result, r);

   r = caml_alloc_small(2, 0);
   Field(r, 0) = Val_int(i2);
   Field(r, 1) = Val_int(0);
   result = caml_alloc_small(2, 0);
   Field(result, 0) = Val_int(i1);
   Field(result, 1) = r

   CAMLreturn (result);
}
&lt;/pre&gt;


&lt;p&gt;
      &#21069;&#20004;&#20010;&#20363;&#23376;&#20013;,&#21015;&#34920;&#33258;&#24213;&#21521;&#19978;&#26500;&#36896;.&#36825;&#37324;&#20351;&#29992;&#21478;&#19968;&#31181;&#26041;&#27861;,&#33258;&#39030;&#21521;&#19979;.
      &#23427;&#30340;&#25928;&#29575;&#27604;&#36739;&#20302;,&#20294;&#26159;&#23637;&#31034;&#20102; &lt;b&gt;caml_modify&lt;/b&gt; &#30340;&#29992;&#27861;.
&lt;/p&gt;



&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;alloc_list_int&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i1&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i2&lt;/span&gt;)
{
   CAMLparam0 ();
   CAMLlocal2 (tail, r);

   r = caml_alloc_small(2, 0);
   Field(r, 0) = Val_int(i1);
   Field(r, 1) = Val_int(0);
   tail = caml_alloc_small(2, 0);
   Field(tail, 0) = Val_int(i2);
   Field(tail, 1) = Val_int(0);
   caml_modify(&amp;amp;Field(r, 1), tail);

   CAMLreturn (result);
}
&lt;/pre&gt;


&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-c_callback_ocaml_id" class="outline-3"&gt;
&lt;h3 id="c_callback_ocaml_id"&gt;&lt;a name="sec-6" id="sec-6"&gt;&lt;/a&gt;&#20174;C&#21040;OCaml&#30340;&#22238;&#35843;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-c_callback_ocaml_id"&gt;


&lt;p&gt;   
   &#33267;&#27492;,&#25105;&#20204;&#35762;&#35299;&#20102;&#22914;&#20309;&#20174;OCaml&#20013;&#35843;&#29992;C&#20989;&#25968;.&#36825;&#19968;&#33410;,&#25105;&#20204;&#23637;&#31034;C&#20989;&#25968;&#22914;&#20309;&#35843;&#29992;
   OCaml&#20989;&#25968;,&#21253;&#25324;&#22238;&#35843;(OCaml&#35843;&#29992;C,C&#21448;&#35843;&#29992;OCaml)&#21644;C&#20316;&#20026;&#20027;&#31243;&#24207;.
&lt;/p&gt;

&lt;/div&gt;

&lt;div id="outline-container-6-1" class="outline-4"&gt;
&lt;h4 id="sec-6-1"&gt;&#20174;C&#20013;&#35843;&#29992;OCaml&#38381;&#21253;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-1"&gt;

&lt;p&gt;    OCaml&#20013;&#35843;&#29992;&#20989;&#25968;&#31216;&#20026;&#24212;&#29992;,&#22240;&#20026;&#20989;&#25968;&#23601;&#26159;&#34920;&#36798;&#24335;,&#35843;&#29992;&#20989;&#25968;,&#23601;&#26159;&#25226;&#34920;&#36798;&#24335;
    &#24212;&#29992;&#21040;&#21442;&#25968;&#19978;.  &#27604;&#22914;&#35745;&#31639;&#19968;&#20010;&#25968;&#30340;&#24179;&#26041;&#29992;&#25968;&#23398;&#26041;&#24335;&#26469;&#25551;&#36848;:&#19968;&#20010;&#25968;&#23383;
    x&#30340;&#24179;&#26041;&#23601;&#26159;x * x,&#25552;&#20379;x&#30340;&#20540;,&#22871;&#29992;&#36825;&#20010;&#20844;&#24335;&#23601;&#33021;&#35745;&#31639;&#20986;&#32467;&#26524;. &#29992;
    OCaml&#25551;&#36848;: &lt;code&gt;let square x = x * x&lt;/code&gt; ,&#36825;&#20010;&#34920;&#36798;&#24335;&#21483;&#20570;let binding.
    square&#21482;&#26159;x * x&#30340;&#21035;&#21517;(&#35843;&#29992;square 2&#20063;&#21487;&#20197;&#29992;(fun x -&amp;gt; x * x) 2),
    square 2&#23601;&#26159;&#25226;x * x&#24212;&#29992;&#21040;2&#19978;.
&lt;/p&gt;
&lt;p&gt;    
    C&#20989;&#25968;&#21487;&#20197;&#24212;&#29992;OCaml&#20989;&#25968;&#24335;value(&#38381;&#21253;)&#21040;OCaml values.&#20197;&#19979;&#20989;&#25968;&#25552;&#20379;
    &#35843;&#29992;&#26041;&#27861;:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;caml_callback(f, a) &#24212;&#29992;&#20989;&#25968;&#24335;value f&#21040;value a, &#36820;&#22238;f&#36820;&#22238;&#30340;value.
&lt;/li&gt;
&lt;li&gt;caml_callback2(f, a, b) &#24212;&#29992;&#20989;&#25968;&#24335;value f&#21040;a&#21644;b
&lt;/li&gt;
&lt;li&gt;caml_callback3(f, a, b, c) &#24212;&#29992;&#20989;&#25968;&#24335;value f&#21040;a, b, c
&lt;/li&gt;
&lt;li&gt;caml_callbackN(f, n, args) &#24212;&#29992;&#20989;&#25968;&#24335;value f&#21040;&#21253;&#21547;n&#20010;&#21442;&#25968;&#30340;
      value&#25968;&#32452;args
&lt;/li&gt;
&lt;/ul&gt;


&lt;p&gt;      
   &#22914;&#26524;&#20989;&#25968;f&#27809;&#26377;&#36820;&#22238;,&#32780;&#24341;&#21457;&#20102;&#19968;&#20010;&#24322;&#24120;,&#36825;&#20010;&#24322;&#24120;&#20250;&#20256;&#25773;&#21040;&#19979;&#20010;OCaml&#20195;&#30721;,
   &#36339;&#36807;C&#20195;&#30721;.&#20063;&#23601;&#26159;&#35828;,&#22914;&#26524;&#19968;&#20010;OCaml&#20989;&#25968;f&#35843;&#29992;C&#20989;&#25968;g,&#22238;&#35843;&#19968;&#20010;OCaml&#20989;&#25968;
   h,h&#24341;&#21457;&#19968;&#20010;&#24322;&#24120;,&#36825;&#26102;g&#30340;&#25191;&#34892;&#20013;&#26029;,&#24322;&#24120;&#34987;&#20256;&#36882;&#22238;f.
&lt;/p&gt;
&lt;p&gt;
   &#22914;&#26524;C&#20195;&#30721;&#24076;&#26395;&#25429;&#33719;&#24322;&#24120;,&#23427;&#21487;&#20197;&#35843;&#29992;caml_callback_exn,
   caml_callback2_exn,caml_callback3_exn,caml_callbackN_exn.
   &#36825;&#20123;&#20989;&#25968;&#25509;&#21463;&#30340;&#21442;&#25968;&#19982;&#19981;&#24102;_exn&#30340;&#20989;&#25968;&#30456;&#21516;,&#20294;&#20250;&#25429;&#33719;&#24322;&#24120;&#24182;&#36820;&#22238;&#21040;C&#20195;
   &#30721;.caml_callback*_exn&#20989;&#25968;&#36820;&#22238;&#30340;value v&#24517;&#39035;&#20351;&#29992;
   &lt;b&gt;Is_exception_result(v)&lt;/b&gt; &#27979;&#35797;.&#36820;&#22238;"false"&#21017;&#27809;&#26377;&#24322;&#24120;,value v
   &#26159;OCaml&#20989;&#25968;&#36820;&#22238;&#30340;&#32467;&#26524;.&#22914;&#26524;&#36820;&#22238;"true",&#21017;&#26377;&#24322;&#24120;,&#23427;(&#24322;&#24120;&#25551;&#36848;&#31526;)&#30340;value&#21487;&#20197;&#20351;&#29992;
   &lt;b&gt;Extract_exception(v)&lt;/b&gt; &#33719;&#24471;.
&lt;/p&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6-2" class="outline-4"&gt;
&lt;h4 id="sec-6-2"&gt;&#27880;&#20876;OCaml&#38381;&#21253;&#32473;C&#20989;&#25968;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-2"&gt;

&lt;p&gt;     &lt;b&gt;callback&lt;/b&gt; &#20989;&#25968;&#30340;&#20027;&#35201;&#38382;&#39064;&#22312;&#20110;&#33719;&#24471;&#19968;&#20010;&#35201;&#35843;&#29992;&#30340;OCaml&#20989;&#25968;&#30340;&#38381;&#21253;.
     &#20026;&#27492;,OCaml&#25552;&#20379;&#20102;&#19968;&#20010;&#31616;&#21333;&#30340;&#27880;&#20876;&#26426;&#21046;,OCaml&#20195;&#30721;&#21487;&#20197;&#27880;&#20876;OCaml&#20989;&#25968;&#21040;&#19968;
     &#20010;&#20840;&#23616;&#21517;&#23383;,&#28982;&#21518;C&#20195;&#30721;&#21487;&#20197;&#36890;&#36807;&#36825;&#20010;&#20840;&#23616;&#21517;&#23383;&#33719;&#24471;&#30456;&#24212;&#30340;&#38381;&#21253;.
&lt;/p&gt;
&lt;p&gt;
     &#22312;OCaml&#20013;,&#36890;&#36807;&#20351;&#29992; &lt;b&gt;Callback.register&lt;/b&gt; n v&#27880;&#20876;.n&#26159;&#19968;&#20010;&#20840;&#23616;&#21517;&#23383;(&#20219;
     &#24847;&#23383;&#31526;&#20018;),v&#26159;&#19968;&#20010;OCaml value.&#20363;&#22914;:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;f&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; x &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; print_string &lt;span style="color: #b643aa;"&gt;" f is applied to "&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; print_int x&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; print_newline&lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;_ &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Callback&lt;/span&gt;.register &lt;span style="color: #b643aa;"&gt;"test function"&lt;/span&gt; f
&lt;/pre&gt;


&lt;p&gt;
     &#22312;C&#20013;,&#20351;&#29992; &lt;b&gt;caml_named_value&lt;/b&gt; (n)&#33719;&#24471;&#23545;&#24212;value&#30340;&#25351;&#38024;. &#22914;&#26524;&#21517;&#23383;n
     &#27809;&#26377;&#23545;&#24212;&#30340;value,&#36820;&#22238;&#19968;&#20010;&#31354;&#25351;&#38024;. &#20363;&#22914;:&#19979;&#38754;&#30340;C&#21253;&#35013;&#22120;&#35843;&#29992;&#20102;&#19978;&#38754;&#30340;
     OCaml&#20989;&#25968;f:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;call_caml_f&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;arg&lt;/span&gt;)
{
  caml_callback(*caml_named_value(&lt;span style="color: #b643aa;"&gt;"test function"&lt;/span&gt;), Val_int(arg));
}
&lt;/pre&gt;


&lt;p&gt;
     &lt;b&gt;caml_named_value&lt;/b&gt; &#36820;&#22238;&#30340;&#25351;&#38024;&#26159;&#22266;&#23450;&#30340;,&#22240;&#27492;&#21487;&#20197;&#23433;&#20840;&#22320;&#20351;&#29992;C&#21464;&#37327;&#36827;&#34892;
      &#32531;&#23384;,&#36991;&#20813;&#37325;&#22797;&#30340;&#21517;&#23383;&#26597;&#25214;.&#21478;&#19968;&#26041;&#38754;,&#25351;&#38024;&#25351;&#21521;&#30340;value&#21487;&#20197;&#22312;&#22403;&#22334;&#25910;&#38598;&#26102;
      &#20462;&#25913;,&#22240;&#27492;&#22312;&#20351;&#29992;&#25351;&#38024;&#26102;&#24517;&#39035;&#37325;&#26032;&#35745;&#31639;. &#19979;&#38754;&#26159;&#19968;&#20010;&#26356;&#26377;&#25928;&#29575;&#30340;&#21253;&#35013;&#26041;&#24335;:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;call_caml_f&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;arg&lt;/span&gt;)
{
  &lt;span style="color: #6e9ac9;"&gt;static&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; *&lt;span style="color: #1fe0e5;"&gt;closure_f&lt;/span&gt; = &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;;
  &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (closure_f == &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;) {
    closure_f = caml_named_value(&lt;span style="color: #b643aa;"&gt;"test function"&lt;/span&gt;);
  }
  caml_callback(*closure_f, Value_int(arg));
}
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6-3" class="outline-4"&gt;
&lt;h4 id="sec-6-3"&gt;&#27880;&#20876;OCaml&#24322;&#24120;&#32473;C&#20989;&#25968;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-3"&gt;


&lt;p&gt;     
     &#19978;&#38754;&#30340;&#27880;&#20876;&#26426;&#21046;&#20063;&#21487;&#20197;&#29992;&#26469;&#23454;&#29616;&#20174;OCaml&#21040;C&#20013;&#30340;&#24322;&#24120;&#26631;&#35782;&#31526;&#36890;&#20449;.
     OCaml&#20195;&#30721;&#20351;&#29992; &lt;b&gt;Callback.register_exception&lt;/b&gt; n exn,&#27880;&#20876;&#24322;&#24120;.
     &#20363;&#22914;:
&lt;/p&gt;



&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #6e9ac9;"&gt;exception&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;Error&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; string
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;_ &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Callback&lt;/span&gt;.register_exception &lt;span style="color: #b643aa;"&gt;"test exception"&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;Error &lt;span style="color: #b643aa;"&gt;"any string"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;
     C&#20195;&#30721;&#20351;&#29992; &lt;b&gt;caml_named_value&lt;/b&gt; &#33719;&#24471;&#24322;&#24120;&#26631;&#35782;&#31526;, &#28982;&#21518;&#23558;&#23427;&#20316;&#20026;
     &lt;b&gt;raise_constant&lt;/b&gt;, &lt;b&gt;raise_with_arg&lt;/b&gt;, &#21644; &lt;b&gt;raise_with_string&lt;/b&gt;
     &#30340;&#21442;&#25968;&#24341;&#21457;&#24322;&#24120;. &#20363;&#22914;,&#19979;&#38754;&#30340;C&#20989;&#25968;&#20351;&#29992;&#32473;&#23450;&#30340;&#21442;&#25968;&#24341;&#21457; &lt;b&gt;Error&lt;/b&gt; &#24322;&#24120;:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;raise_error&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;char&lt;/span&gt; *&lt;span style="color: #1fe0e5;"&gt;msg&lt;/span&gt;)
{
  caml_raise_with_string(*caml_named_value(&lt;span style="color: #b643aa;"&gt;"test exception"&lt;/span&gt;, msg);
}
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6-4" class="outline-4"&gt;
&lt;h4 id="sec-6-4"&gt;C&#20316;&#20026;&#20027;&#31243;&#24207;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-4"&gt;

&lt;p&gt;    &#19968;&#33324;&#24773;&#20917;&#19979;,&#28151;&#21512;OCaml&#21644;C&#30340;&#31243;&#24207;&#20381;&#38752;&#25191;&#34892;OCaml&#30340;&#21021;&#22987;&#21270;&#20195;&#30721;&#21551;&#21160;.&#28982;&#21518;&#21487;
    &#33021;&#20250;&#35843;&#29992;C&#20195;&#30721;.&#25105;&#20204;&#35828;&#20027;&#31243;&#24207;&#20026;OCaml&#20195;&#30721;.&#22312;&#19968;&#20123;&#31243;&#24207;&#20013;,&#38656;&#35201;&#20351;&#29992;C&#20195;&#30721;
    &#26469;&#23436;&#25104;&#20027;&#31243;&#24207;&#30340;&#35282;&#33394;,&#24403;&#38656;&#35201;&#26102;&#35843;&#29992;OCaml&#20989;&#25968;. &#36825;&#21487;&#20197;&#36890;&#36807;&#20197;&#19979;&#27493;&#39588;&#23436;
    &#25104;:
&lt;/p&gt;&lt;ul&gt;
&lt;li&gt;&#31243;&#24207;&#30340;C&#37096;&#20998;&#24517;&#39035;&#25552;&#20379;&#19968;&#20010; &lt;b&gt;main&lt;/b&gt; &#20989;&#25968;,&#23427;&#23558;&#35206;&#30422;OCaml&#36816;&#34892;&#26102;&#25552;&#20379;&#30340;
      &lt;b&gt;main&lt;/b&gt; &#20989;&#25968;.&#23558;&#21644;&#19968;&#33324;&#30340;C&#31243;&#24207;&#19968;&#26679;&#20174;&#29992;&#25143;&#23450;&#20041;&#30340; &lt;b&gt;main&lt;/b&gt; &#20989;&#25968;&#25191;&#34892;.
&lt;/li&gt;
&lt;li&gt;&#22312;&#26576;&#20010;&#22320;&#26041;,C&#20195;&#30721;&#24517;&#39035;&#35843;&#29992; &lt;b&gt;caml_main(argv)&lt;/b&gt; &#26469;&#21021;&#22987;&#21270;OCaml&#20195;&#30721;.
      &lt;b&gt;argv&lt;/b&gt; &#21442;&#25968;&#26159;&#19968;&#20010;&#20197;NULL&#32467;&#23614;&#30340;C&#23383;&#31526;&#20018;&#25968;&#32452;(&#31867;&#22411; &lt;b&gt;char **&lt;/b&gt;),&#23427;&#34920;&#31034;
      &#21629;&#20196;&#34892;&#21442;&#25968;,&#21644;&#20256;&#36882;&#32473; &lt;b&gt;main&lt;/b&gt; &#30340;&#31532;&#20108;&#20010;&#21442;&#25968;&#19968;&#26679;.OCaml&#25968;&#32452;
      &lt;b&gt;Sys.argv&lt;/b&gt; &#23558;&#20174;&#36825;&#20010;&#21442;&#25968;&#21021;&#22987;&#21270;. &#22312;&#23383;&#33410;&#30721;&#32534;&#35793;&#22120;&#20013;, &lt;b&gt;argv[ 0]&lt;/b&gt; &#21644;
      &lt;b&gt;argv[ 1]&lt;/b&gt; &#20063;&#29992;&#26469;&#26597;&#25214;&#21253;&#21547;&#23383;&#33410;&#30721;&#30340;&#25991;&#20214;.
&lt;/li&gt;
&lt;li&gt;&#35843;&#29992; &lt;b&gt;caml_main&lt;/b&gt; &#21021;&#22987;&#21270;OCaml&#36816;&#34892;&#26102;&#31995;&#32479;,&#21152;&#36733;&#23383;&#33410;&#30721;(&#22312;&#23383;&#33410;&#30721;&#32534;
        &#35793;&#30340;&#24773;&#20917;&#19979;),&#24182;&#25191;&#34892;OCaml&#31243;&#24207;&#30340;&#21021;&#22987;&#21270;&#20195;&#30721;.&#19968;&#33324;&#26469;&#35828;,&#36825;&#20123;&#21021;&#22987;&#21270;&#20195;
        &#30721;&#20351;&#29992; &lt;b&gt;Camlback.register&lt;/b&gt; &#27880;&#20876;&#22238;&#35843;&#20989;&#25968;.&#19968;&#26086;OCaml&#21021;&#22987;&#21270;&#20195;&#30721;&#23436;
        &#25104;,&#23558;&#36820;&#22238;&#21040;&#35843;&#29992; &lt;b&gt;caml_main&lt;/b&gt; &#30340;C&#20195;&#30721;&#20013;&#32487;&#32493;&#25191;&#34892;.
&lt;/li&gt;
&lt;li&gt;&#36825;&#26102;C&#20195;&#30721;&#21487;&#20197;&#36890;&#36807;&#22238;&#35843;&#26426;&#21046;&#35843;&#29992;OCaml&#20989;&#25968;.
&lt;/li&gt;
&lt;/ul&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-6-5" class="outline-4"&gt;
&lt;h4 id="sec-6-5"&gt;&#23884;&#20837;OCaml&#20195;&#30721;&#21040;C&#20195;&#30721;&#20013;&lt;/h4&gt;
&lt;div class="outline-text-4" id="text-6-5"&gt;

&lt;p&gt;     &#23383;&#33410;&#30721;&#32534;&#35793;&#22120;&#22312;&#33258;&#23450;&#20041;&#36816;&#34892;&#26102;(custom runtime)&#27169;&#24335;&#20013;(ocamlc -custom)&#21482;&#26159;&#28155;&#21152;&#23383;&#33410;&#30721;&#21040;
     &#21253;&#21547;&#33258;&#23450;&#20041;&#36816;&#34892;&#26102;&#30340;&#21487;&#25191;&#34892;&#25991;&#20214;&#20013;. &#36825;&#26377;&#20004;&#20010;&#27493;&#39588;.&#39318;&#20808;,&#26368;&#32456;&#38142;&#25509;&#24517;&#39035;&#36890;
     &#36807; &lt;b&gt;ocamlc&lt;/b&gt; &#23436;&#25104;. &#31532;&#20108;,OCaml&#36816;&#34892;&#26102;&#24517;&#39035;&#33021;&#36890;&#36807;&#21629;&#20196;&#34892;&#21442;&#25968;&#25214;&#21040;&#21487;&#25191;&#34892;
     &#25991;&#20214;&#30340;&#21517;&#23383;.&#24403;&#20351;&#29992; &lt;b&gt;caml_main(argv)&lt;/b&gt; &#26102;, &lt;b&gt;argv[ 0]&lt;/b&gt; &#21644; &lt;b&gt;argv[ 1]&lt;/b&gt;
     &#24517;&#39035;&#21253;&#21547;&#21487;&#25191;&#34892;&#25991;&#20214;&#30340;&#21517;&#23383;.
&lt;/p&gt;
&lt;p&gt;
     &#21478;&#19968;&#20010;&#23884;&#20837;&#23383;&#33410;&#30721;&#21040;C&#20195;&#30721;&#30340;&#26041;&#27861;&#26159;&#20351;&#29992; &lt;b&gt;ocamlc&lt;/b&gt; &#30340; &lt;b&gt;-output-obj&lt;/b&gt; &#36873;
     &#39033;.&#23427;&#21578;&#35785; &lt;b&gt;ocamlc&lt;/b&gt; &#32534;&#35793;&#22120;&#36755;&#20986;&#19968;&#20010;&#21253;&#21547;OCaml&#23383;&#33410;&#30721;&#30340;C&#23545;&#35937;&#25991;&#20214; (.o
     &#25991;&#20214;, windows&#19979;&#20026;.obj), &#21644; &lt;b&gt;caml_startup&lt;/b&gt; &#20989;&#25968;. &#36825;&#20010;C&#23545;&#35937;&#25991;&#20214;&#21487;
     &#20197;&#20351;&#29992;&#26631;&#20934;C&#32534;&#35793;&#22120;&#38142;&#25509;,&#25110;&#23384;&#20648;&#36827;&#19968;&#20010;C library&#20013;.
&lt;/p&gt;
&lt;p&gt;
     &lt;b&gt;caml_startup&lt;/b&gt; &#20989;&#25968;&#24517;&#39035;&#20174;&#20027;C&#31243;&#24207;&#20013;&#35843;&#29992;,&#20026;&#20102;&#21021;&#22987;&#21270;OCaml&#36816;&#34892;&#26102;&#21644;&#25191;
      &#34892;OCaml&#21021;&#22987;&#21270;&#20195;&#30721;. &#21644; &lt;b&gt;caml_main&lt;/b&gt; &#19968;&#26679;,&#23427;&#25509;&#21463;&#19968;&#20010;&#21253;&#21547;&#21629;&#20196;&#34892;&#21442;&#25968;
      &#30340; &lt;b&gt;argv&lt;/b&gt; &#21442;&#25968;.&#19982; &lt;b&gt;caml_main&lt;/b&gt; &#19981;&#21516;&#30340;&#26159;, &#36825;&#20010;argv&#21442;&#25968;&#21482;&#26159;&#29992;&#26469;
      &#21021;&#22987;&#21270; &lt;b&gt;Sys.argv&lt;/b&gt;,&#19981;&#20250;&#29992;&#26469;&#26597;&#25214;&#21487;&#25191;&#34892;&#25991;&#20214;&#30340;&#21517;&#23383;.
&lt;/p&gt;
&lt;p&gt;
      &lt;b&gt;-output-obj&lt;/b&gt; &#36873;&#39033;&#20063;&#21487;&#20197;&#29992;&#26469;&#33719;&#24471;C&#28304;&#20195;&#30721;&#25991;&#20214;. &#21478;&#22806;,&#23427;&#36824;&#33021;&#30452;&#25509;&#20135;&#29983;
      &#19968;&#20010;&#21253;&#21547;OCaml&#20195;&#30721;&#12289;OCaml&#36816;&#34892;&#26102;&#31995;&#32479;&#21644;&#20854;&#23427;&#20256;&#36882;&#32473; &lt;b&gt;ocamlc&lt;/b&gt; &#30340;&#38745;&#24577;C
      &#20195;&#30721;(.o, .a,&#25110;&#32773; .obj, .lib) &#30340;&#20849;&#20139;&#24211;(.so&#25991;&#20214;, Windows&#19979;&#20026;.dll)&#12290;
      &#36825;&#31181;&#26041;&#24335;&#21644;&#19968;&#20010;&#26222;&#36890;&#30340;&#38142;&#25509;&#27493;&#39588;&#24456;&#31867;&#20284;&#65292;&#21482;&#19981;&#36807;&#23427;&#20135;&#29983;&#19968;&#20010;&#20849;&#20139;&#24211;&#65292;&#21487;
      &#20197;&#22312;&#38656;&#35201;&#30340;&#26102;&#20505;&#36816;&#34892;OCaml&#20195;&#30721;&#12290; &lt;b&gt;-output-obj&lt;/b&gt; &#36825;&#19977;&#31181;&#34892;&#20026;&#36890;&#36807;
      &#36755;&#20986;&#25991;&#20214;&#30340;&#25193;&#23637;&#21517;&#26469;&#36873;&#25321;(&#20351;&#29992; &lt;b&gt;-o&lt;/b&gt;)&#12290;
&lt;/p&gt;
&lt;p&gt;
      &#26412;&#22320;&#32534;&#35793;&#22120; &lt;b&gt;ocamlopt&lt;/b&gt; &#20063;&#25903;&#25345; &lt;b&gt;-output-obj&lt;/b&gt; &#36873;&#39033;&#65292; &#21487;&#20197;&#36755;&#20986;&#19968;&#20010;C
      &#23545;&#35937;&#25991;&#20214;&#25110;&#19968;&#20010;&#21253;&#21547;&#21629;&#20196;&#34892;&#19978;&#25351;&#23450;&#30340;&#25152;&#26377;OCaml&#27169;&#22359;&#30340;&#26412;&#22320;&#20195;&#30721;&#30340;&#20849;&#20139;&#24211;
      &#21644;OCaml&#36215;&#22987;&#20195;&#30721;&#12290;&#21644;&#23383;&#33410;&#30721;&#32534;&#35793;&#22120;&#19968;&#26679;&#35843;&#29992; &lt;b&gt;caml_startup&lt;/b&gt;
      &#36827;&#34892;&#21021;&#22987;&#21270;&#12290;
&lt;/p&gt;
&lt;p&gt;
      &#22312;&#26368;&#32456;&#30340;&#38142;&#25509;&#38454;&#27573;&#65292;&#38500;&#20102;&#25152;&#26377; &lt;b&gt;-output-obj&lt;/b&gt; &#20135;&#29983;&#30340;&#25991;&#20214;&#22806;&#65292;&#20320;&#36824;&#38656;&#35201;
      &#25552;&#20379;OCaml&#30340;&#36816;&#34892;&#26102;&#24211;(&#23383;&#33410;&#30721;&#29992; &lt;b&gt;libcamlrun.a&lt;/b&gt;, &#26412;&#22320;&#20195;&#30721;&#29992;
      &lt;b&gt;libasmrun.a&lt;/b&gt;, vc&#32534;&#35793;&#22120;&#20026;.lib)&#65292;&#21644;&#25152;&#26377;&#20381;&#36182;&#30340;OCaml&#24211;&#25152;&#23545;&#24212;&#30340;&#30340;C&#24211;&#12290;&#20363;&#22914;&#65292;
      &#20551;&#35774;&#20320;&#30340;&#31243;&#24207;&#30340;OCaml&#37096;&#20998;&#20351;&#29992;&#20102;Unix&#24211;&#65292;&#20351;&#29992; &lt;b&gt;ocamlc&lt;/b&gt;, &#20320;&#38656;&#35201;&#65306;
&lt;/p&gt;


&lt;pre class="example"&gt;ocamlc -output-obj -o camlcode.o unix.cma (&#20854;&#23427; .cmo &#21644; .cma &#25991;&#20214;)
cc -o myproj (C&#23545;&#35937;&#25991;&#20214;&#25110;&#24211;) camlcode.o -L/usr/local/lib/ocaml -lunix -lcamlrun   
&lt;/pre&gt;


&lt;p&gt;
      &#20351;&#29992; &lt;b&gt;ocamlopt&lt;/b&gt; ,&#20320;&#38656;&#35201;:
&lt;/p&gt;


&lt;pre class="example"&gt;ocamlopt -output-obj -o camlcode.o unix.cmxa (&#20854;&#23427; .cmx &#21644; .cmxa &#25991;&#20214;)
cc -o myprog (C&#23545;&#35937;&#25991;&#20214;&#25110;&#24211;) camlcode.o -L/usr/local/lib/ocaml -lunix -lasmrun    
&lt;/pre&gt;


&lt;p&gt;      
      &#27880;&#24847;: &#22312;Windows NT&#19979;,OCaml&#20135;&#29983;&#30340;&#23545;&#35937;&#25991;&#20214;&#20351;&#29992;/MD&#36873;&#39033;&#32534;&#35793;,&#22240;&#27492;&#25152;&#26377;
      &#20854;&#23427;&#38656;&#35201;&#38142;&#25509;&#30340;&#23545;&#35937;&#25991;&#20214;&#37117;&#35201;&#20351;&#29992;/MD&#36873;&#39033;&#32534;&#35793;. (&#21442;&#35265;
      config/Makefile.vc&#20013;&#30340; &lt;b&gt;BYTECCCOMPOPTS&lt;/b&gt; &#21644; &lt;b&gt;NATIVECCCOMPOPTS&lt;/b&gt; )
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-win32_kill_id" class="outline-3"&gt;
&lt;h3 id="win32_kill_id"&gt;&lt;a name="sec-7" id="sec-7"&gt;&lt;/a&gt;&#23436;&#25972;&#31034;&#20363;:Win32&#19979;&#30340;kill&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-win32_kill_id"&gt;


&lt;p&gt;    
    &#26412;&#31034;&#20363;&#36890;&#36807;&#21253;&#35013;win32&#30340;API&#26469;&#23454;&#29616;Windows&#20013;&#32467;&#26463;&#36827;&#31243;&#30340;&#21151;&#33021;.
    &#36890;&#36807; kill &amp;lt;pid&amp;gt; &#25110; kill -n &amp;lt;process name&amp;gt; &#26469;&#35843;&#29992;.
&lt;/p&gt;
&lt;p&gt;
    &#22312;Windows&#19979;,&#32467;&#26463;&#36827;&#31243;&#35201;&#29992;&#30340;&#20989;&#25968;&#26377; &lt;b&gt;OpenProcess&lt;/b&gt; &#21644;
    &lt;b&gt;TerminateProcess&lt;/b&gt;,&#25105;&#20204;&#25226;&#36825;&#20004;&#20010;&#20989;&#25968;&#21253;&#35013;&#32473;OCaml.
&lt;/p&gt;
&lt;p&gt;
    win32_process_stubs.c,&#21253;&#35013;Win32 API&#32473;OCaml:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;Windows.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;tchar.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;psapi.h&amp;gt;&lt;/span&gt;

&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/mlvalues.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/memory.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/callback.h&amp;gt;&lt;/span&gt;
&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;caml/fail.h&amp;gt;&lt;/span&gt;

&lt;span style="color: #6e9ac9;"&gt;static&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;const&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;desired_access_table&lt;/span&gt;[] = {
    DELETE,
    READ_CONTROL,
    SYNCHRONIZE,
    WRITE_DAC,
    WRITE_OWNER,
    PROCESS_ALL_ACCESS,
    PROCESS_CREATE_PROCESS,
    PROCESS_CREATE_THREAD,
    PROCESS_DUP_HANDLE,
    PROCESS_QUERY_INFORMATION,
    PROCESS_QUERY_LIMITED_INFORMATION,
    PROCESS_SET_INFORMATION,
    PROCESS_SET_QUOTA,
    PROCESS_SUSPEND_RESUME,
    PROCESS_TERMINATE,
    PROCESS_VM_OPERATION,
    PROCESS_VM_READ,
    PROCESS_VM_WRITE,
};

&lt;span style="color: #93e93f;"&gt;DWORD&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;get_desired_access&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;da_list&lt;/span&gt;)
{
    &lt;span style="color: #93e93f;"&gt;DWORD&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;desired_access&lt;/span&gt; = 0;
    &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v&lt;/span&gt;;

    &lt;span style="color: #6e9ac9;"&gt;while&lt;/span&gt; (da_list != Val_emptylist){
        v = Field(da_list, 0);
        desired_access |= desired_access_table[Long_val(v)];
        da_list = Field(da_list, 1);
    }

    &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt; desired_access;
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;Handle &amp;#31867;&amp;#22411;  &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;

&lt;span style="color: #c87e5f;"&gt;#define&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;Handle_val&lt;/span&gt;(&lt;span style="color: #1fe0e5;"&gt;v&lt;/span&gt;) (*((&lt;span style="color: #93e93f;"&gt;HANDLE&lt;/span&gt;*)(v)))

&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;alloc_handle&lt;/span&gt; (&lt;span style="color: #93e93f;"&gt;HANDLE&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;h&lt;/span&gt;)
{
    &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;val&lt;/span&gt;;

    val = alloc_small(&lt;span style="color: #6e9ac9;"&gt;sizeof&lt;/span&gt;(HANDLE)/&lt;span style="color: #6e9ac9;"&gt;sizeof&lt;/span&gt;(value), Abstract_tag);
    Handle_val(val) = h;
    &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt; val;
}

CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;is_null_handle&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;handle&lt;/span&gt;)
{
    &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt; Val_bool(Handle_val(handle) == &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;);
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25243;&amp;#20986;OCaml Win32Error&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;raise_win32_error&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;id&lt;/span&gt;)
{
    &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;systemLocal&lt;/span&gt; = MAKELANGID(LANG_NEUTRAL, SUBLANG_NEUTRAL);
    &lt;span style="color: #93e93f;"&gt;LPVOID&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;lpMsgBuf&lt;/span&gt; = &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;;
    &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;error_result&lt;/span&gt;[2];

    &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;ret&lt;/span&gt; = FormatMessage(
        FORMAT_MESSAGE_FROM_SYSTEM|FORMAT_MESSAGE_IGNORE_INSERTS|
        FORMAT_MESSAGE_ALLOCATE_BUFFER,
        &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;,id,systemLocal,
        (LPTSTR)&amp;amp;lpMsgBuf, 0, &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;);

    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt;(!ret) {
        &lt;span style="color: #a36238;"&gt;//&lt;/span&gt;&lt;span style="color: #a36238;"&gt;Is it a network-related error?&lt;/span&gt;
        &lt;span style="color: #93e93f;"&gt;HMODULE&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;hDll&lt;/span&gt;=LoadLibraryEx(TEXT(&lt;span style="color: #b643aa;"&gt;"newmsg.dll"&lt;/span&gt;),&lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;,
                           DONT_RESOLVE_DLL_REFERENCES);
        &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt;(hDll!=&lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;) {
            ret=FormatMessage(
                FORMAT_MESSAGE_FROM_HMODULE|FORMAT_MESSAGE_IGNORE_INSERTS|
                FORMAT_MESSAGE_ALLOCATE_BUFFER,
                &lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;,id,systemLocal,
                (LPTSTR)&amp;amp;lpMsgBuf,0,&lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt;);

            FreeLibrary(hDll);
        }
    }

    error_result[0] = Val_long(id);
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (lpMsgBuf) {
        error_result[1] = caml_copy_string(lpMsgBuf);
        LocalFree(lpMsgBuf);
    } &lt;span style="color: #6e9ac9;"&gt;else&lt;/span&gt; {
        error_result[1] = caml_copy_string(&lt;span style="color: #b643aa;"&gt;"\r\n"&lt;/span&gt;); &lt;span style="color: #a36238;"&gt;//&lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25214;&amp;#19981;&amp;#21040;&amp;#38169;&amp;#35823;&amp;#28040;&amp;#24687;&amp;#21017;&amp;#20026;&amp;#31354;&amp;#23383;&amp;#31526;&amp;#20018;&lt;/span&gt;
    }

    caml_raise_with_args(*caml_named_value(&lt;span style="color: #b643aa;"&gt;"win32 exception"&lt;/span&gt;), 2, error_result);
}

__inline &lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;raise_last_win32_error&lt;/span&gt;()
{
    raise_win32_error(GetLastError());
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#36827;&amp;#31243;&amp;#30456;&amp;#20851;&amp;#20989;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;

CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;open_process&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;da&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;inherit&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;pid&lt;/span&gt;)
{
    CAMLparam3(da, inherit, pid);
    CAMLlocal1(result);

    &lt;span style="color: #93e93f;"&gt;HANDLE&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;hproc&lt;/span&gt; = OpenProcess(get_desired_access(da),
                               Bool_val(inherit),
                               Long_val(pid));
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (&lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt; == hproc) {
        raise_last_win32_error();
    } 
    result = alloc_handle(hproc);

    CAMLreturn(result);
}

&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;terminate_process&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;handle&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;exit_code&lt;/span&gt;)
{
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (!(TerminateProcess(Handle_val(handle), Long_val(exit_code)))) {
        raise_last_win32_error();
    }
}

&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;close_handle&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;handle&lt;/span&gt;)
{
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (!CloseHandle(Handle_val(handle))) {
        raise_last_win32_error();
    }
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#26522;&amp;#20030;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;/*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt;  pid, &amp;#36827;&amp;#31243;id&lt;/span&gt;
&lt;span style="color: #a36238;"&gt;  proc_name, &amp;#20445;&amp;#23384;&amp;#36827;&amp;#31243;&amp;#21517;&amp;#30340;&amp;#23383;&amp;#31526;&amp;#20018;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt;  size, proc_name&amp;#30340;&amp;#32531;&amp;#20914;&amp;#21306;&amp;#22823;&amp;#23567;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;  
&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;get_proc_name&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;DWORD&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;pid&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;char&lt;/span&gt; *&lt;span style="color: #1fe0e5;"&gt;proc_name&lt;/span&gt;, &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;size&lt;/span&gt;)
{
    &lt;span style="color: #93e93f;"&gt;HANDLE&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;hProcess&lt;/span&gt; ;

    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (pid == 0) {
        strncpy(proc_name, &lt;span style="color: #b643aa;"&gt;"System Idle Process"&lt;/span&gt;, size);
        &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt;;
    }
    &lt;span style="color: #6e9ac9;"&gt;else&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (pid == 4) {
        strncpy(proc_name, &lt;span style="color: #b643aa;"&gt;"System"&lt;/span&gt;, size);
        &lt;span style="color: #6e9ac9;"&gt;return&lt;/span&gt;;
    }
    strncpy(proc_name, &lt;span style="color: #b643aa;"&gt;"&amp;lt;unknown&amp;gt;"&lt;/span&gt;, size);

    hProcess = OpenProcess( PROCESS_QUERY_INFORMATION |
                                   PROCESS_VM_READ,
                                   FALSE, pid );
    &lt;span style="color: #a36238;"&gt;// &lt;/span&gt;&lt;span style="color: #a36238;"&gt;Get the process name.&lt;/span&gt;
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (&lt;span style="color: #008b8b;"&gt;NULL&lt;/span&gt; != hProcess )
    {
        &lt;span style="color: #93e93f;"&gt;HMODULE&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;hMod&lt;/span&gt;;
        &lt;span style="color: #93e93f;"&gt;DWORD&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;cbNeeded&lt;/span&gt;;

        &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; ( EnumProcessModules( hProcess, &amp;amp;hMod, &lt;span style="color: #6e9ac9;"&gt;sizeof&lt;/span&gt;(hMod), 
             &amp;amp;cbNeeded) )
        {
            GetModuleBaseName( hProcess, hMod, proc_name, size );
        }
    }

    CloseHandle( hProcess );
}

&lt;span style="color: #a36238;"&gt;/*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt;  &amp;#26522;&amp;#20030;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243;,&amp;#36820;&amp;#22238;&amp;#31867;&amp;#22411;&amp;#20026;(pid, pname) array;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt;  pid&amp;#20026;&amp;#36827;&amp;#31243;id, pname&amp;#20026;&amp;#36827;&amp;#31243;&amp;#26144;&amp;#20687;&amp;#21517;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
CAMLprim &lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;enum_all_proc&lt;/span&gt; ()
{
&lt;span style="color: #c87e5f;"&gt;#define&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;MAX_PROC&lt;/span&gt; 1024  
    &lt;span style="color: #93e93f;"&gt;DWORD&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;all_proc_id&lt;/span&gt;[MAX_PROC], &lt;span style="color: #1fe0e5;"&gt;cbNeeded&lt;/span&gt;, &lt;span style="color: #1fe0e5;"&gt;cProcesses&lt;/span&gt;, &lt;span style="color: #1fe0e5;"&gt;pid&lt;/span&gt;;
    &lt;span style="color: #93e93f;"&gt;unsigned&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;i&lt;/span&gt;;
    &lt;span style="color: #93e93f;"&gt;char&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;proc_name&lt;/span&gt;[MAX_PATH];

    CAMLparam0 ();
    CAMLlocal2 (result, proc_info);

    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (!EnumProcesses(all_proc_id, &lt;span style="color: #6e9ac9;"&gt;sizeof&lt;/span&gt;(all_proc_id), &amp;amp;cbNeeded)){
        raise_last_win32_error();
    }

    cProcesses = cbNeeded / &lt;span style="color: #6e9ac9;"&gt;sizeof&lt;/span&gt;(DWORD);

    &lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#29983;&amp;#25104;(int, string) array&amp;#30340;&amp;#36827;&amp;#31243;&amp;#21015;&amp;#34920; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
    result = caml_alloc(cProcesses, 0);
    &lt;span style="color: #a36238;"&gt;//&lt;/span&gt;&lt;span style="color: #a36238;"&gt;result&amp;#35201;&amp;#29992;Store_field&amp;#21021;&amp;#22987;&amp;#21270;?&amp;#25105;&amp;#30475;&amp;#20102;alloc.c&amp;#20013;caml_alloc_array&amp;#30340;&amp;#20195;&amp;#30721;,&lt;/span&gt;
    &lt;span style="color: #a36238;"&gt;//&lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#23427;&amp;#20063;&amp;#27809;&amp;#26377;&amp;#29992;Store_field&amp;#36827;&amp;#34892;&amp;#21021;&amp;#22987;&amp;#21270;,&amp;#25925;&amp;#25105;&amp;#36825;&amp;#37324;&amp;#20063;&amp;#27809;&amp;#26377;&amp;#21021;&amp;#22987;&amp;#21270;.&lt;/span&gt;
    &lt;span style="color: #a36238;"&gt;//&lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#21518;&amp;#38754;&amp;#30452;&amp;#25509;&amp;#29992;caml_modify&lt;/span&gt;
    &lt;span style="color: #6e9ac9;"&gt;for&lt;/span&gt; (i = 0; i &amp;lt; cProcesses; i++) {
        pid = all_proc_id[i];
        get_proc_name(pid, proc_name, MAX_PATH);

        proc_info = caml_alloc(2, 0);
        Store_field(proc_info, 0, Val_long(pid));
        Store_field(proc_info, 1, caml_copy_string(proc_name));

        caml_modify(&amp;amp;Field(result, i), proc_info);
    }

    CAMLreturn (result);
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25171;&amp;#24320;&amp;#29305;&amp;#26435; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;

&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;EnablePrivilege&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;LPSTR&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;name&lt;/span&gt;)
{
    &lt;span style="color: #93e93f;"&gt;HANDLE&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;hToken&lt;/span&gt;;
    &lt;span style="color: #93e93f;"&gt;BOOL&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;rv&lt;/span&gt;;
    &lt;span style="color: #93e93f;"&gt;TOKEN_PRIVILEGES&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;priv&lt;/span&gt; = {1,{0,0,SE_PRIVILEGE_ENABLED}};

    LookupPrivilegeValue(0,name,&amp;amp;priv.Privileges[0].Luid);
    OpenProcessToken(GetCurrentProcess(),TOKEN_ADJUST_PRIVILEGES,&amp;amp;hToken);

    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; (!AdjustTokenPrivileges(hToken,FALSE,&amp;amp;priv,&lt;span style="color: #6e9ac9;"&gt;sizeof&lt;/span&gt; priv,0,0)){
        CloseHandle(hToken);
        raise_last_win32_error();
    }

    CloseHandle(hToken);
}

&lt;span style="color: #a36238;"&gt;/* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#21253;&amp;#35013;&amp;#32473;OCaml &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*/&lt;/span&gt;
&lt;span style="color: #93e93f;"&gt;void&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;enable_privilege&lt;/span&gt;(&lt;span style="color: #93e93f;"&gt;value&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v&lt;/span&gt;)
{
    EnablePrivilege(String_val(v));
}
&lt;/pre&gt;


&lt;p&gt;
    process.ml, &#21253;&#35013;&#20989;&#25968;&#30340;&#25509;&#21475;:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#36827;&amp;#31243;&amp;#35775;&amp;#38382;&amp;#26435;&amp;#38480; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;process_desired_access &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; DELETE
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; READ_CONTROL
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SYNCHRONIZE
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; WRITE_DAC
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; WRITE_OWNER
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_ALL_ACCESS
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_CREATE_PROCESS
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_CREATE_THREAD
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_DUP_HANDLE
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_QUERY_INFORMATION
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_QUERY_LIMITED_INFORMATION
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_SET_INFORMATION
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_SET_QUOTA
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_SUSPEND_RESUME
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_TERMINATE
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_VM_OPERATION
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_VM_READ
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PROCESS_VM_WRITE

&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;privilege_constants  &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_TOKEN   
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_ASSIGNPRIMARYTOKEN 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_LOCK_MEMORY    
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_INCREASE_QUOTA 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_UNSOLICITED_INPUT  
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_MACHINE_ACCOUNT 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TCB    
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SECURITY   
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TAKE_OWNERSHIP 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_LOAD_DRIVER    
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYSTEM_PROFILE 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYSTEMTIME 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_PROF_SINGLE_PROCESS    
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_INC_BASE_PRIORITY  
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_PAGEFILE 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_PERMANENT   
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_BACKUP 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_RESTORE    
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SHUTDOWN   
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_DEBUG  
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_AUDIT  
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYSTEM_ENVIRONMENT 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CHANGE_NOTIFY  
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_REMOTE_SHUTDOWN    
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_GLOBAL 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_UNDOCK 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_MANAGE_VOLUME 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_IMPERSONATE 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_ENABLE_DELEGATION 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYNC_AGENT 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TRUSTED_CREDMAN_ACCESS 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_RELABEL 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_INCREASE_WORKING_SET 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TIME_ZONE 
&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_SYMBOLIC_LINK 

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;string_of_privilege&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;function&lt;/span&gt;
 &lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_TOKEN &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeCreateTokenPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_ASSIGNPRIMARYTOKEN &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeAssignPrimaryTokenPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_LOCK_MEMORY &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeLockMemoryPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_INCREASE_QUOTA &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeIncreaseQuotaPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_UNSOLICITED_INPUT &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeUnsolicitedInputPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_MACHINE_ACCOUNT &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeMachineAccountPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TCB &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeTcbPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SECURITY &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeSecurityPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TAKE_OWNERSHIP &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeTakeOwnershipPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_LOAD_DRIVER &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeLoadDriverPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYSTEM_PROFILE &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeSystemProfilePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYSTEMTIME &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeSystemtimePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_PROF_SINGLE_PROCESS &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeProfileSingleProcessPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_INC_BASE_PRIORITY &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeIncreaseBasePriorityPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_PAGEFILE &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeCreatePagefilePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_PERMANENT &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeCreatePermanentPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_BACKUP &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeBackupPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_RESTORE &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeRestorePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SHUTDOWN &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeShutdownPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_DEBUG &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeDebugPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_AUDIT &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeAuditPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYSTEM_ENVIRONMENT &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeSystemEnvironmentPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CHANGE_NOTIFY &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeChangeNotifyPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_REMOTE_SHUTDOWN &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeRemoteShutdownPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_GLOBAL &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeCreateGlobalPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_UNDOCK &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeUndockPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_MANAGE_VOLUME &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeManageVolumePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_IMPERSONATE &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeImpersonatePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_ENABLE_DELEGATION &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeEnableDelegationPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_SYNC_AGENT &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeSyncAgentPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TRUSTED_CREDMAN_ACCESS &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeTrustedCredManAccessPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_RELABEL &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeRelabelPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_INCREASE_WORKING_SET &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeIncreaseWorkingSetPrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_TIME_ZONE &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeTimeZonePrivilege"&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; SE_CREATE_SYMBOLIC_LINK &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"SeCreateSymbolicLinkPrivilege"&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;handle&lt;/span&gt;

&lt;span style="color: #6e9ac9;"&gt;exception&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;Win32Error&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; int &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; string
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;_ &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Callback&lt;/span&gt;.register_exception &lt;span style="color: #b643aa;"&gt;"win32 exception"&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;Win32Error &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;0&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;&lt;span style="color: #b643aa;"&gt;"win32 error"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;))&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#26159;&amp;#21542;&amp;#20026;&amp;#31354;&amp;#21477;&amp;#26564; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;is_null_handle &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;handle&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;handle &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; bool &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"is_null_handle"&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#20851;&amp;#38381;&amp;#21477;&amp;#26564;,&amp;#22833;&amp;#36133;&amp;#21017;&amp;#25243;&amp;#20986;Win32Error&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;  
&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;close_handle &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;handle&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;handle &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; unit &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"close_handle"&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25171;&amp;#24320;&amp;#36827;&amp;#31243;,&amp;#25171;&amp;#24320;&amp;#22833;&amp;#36133;&amp;#25243;&amp;#20986;Win32Error&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;  
&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;open_process &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;da &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; process_desired_access list &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;inherit_handle&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;bool &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
  &lt;span style="color: #1fe0e5;"&gt;proc_id&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; handle  &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"open_process"&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#32467;&amp;#26463;&amp;#36827;&amp;#31243;,&amp;#22833;&amp;#36133;&amp;#25243;&amp;#20986;Win32Error&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;  
&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;terminate_process &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;handle&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt;handle &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;exit_code&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;int &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; unit &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  &lt;span style="color: #b643aa;"&gt;"terminate_process"&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;proc_info &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; int &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; string

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#26522;&amp;#20030;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;  
&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;enum_processes &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;unit &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; proc_info array &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"enum_all_proc"&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;external&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;enable_privilege_s &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;:&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;string &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;&lt;span style="color: #93e93f;"&gt; unit &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"enable_privilege"&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25552;&amp;#21319;&amp;#24403;&amp;#21069;&amp;#36827;&amp;#31243;&amp;#30340;&amp;#25351;&amp;#23450;&amp;#26435;&amp;#38480;,&amp;#22833;&amp;#36133;&amp;#25243;&amp;#20986;Win32Error&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;  
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;enable_privilege&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; priv &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  enable_privilege_s &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;string_of_privilege priv&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#26432;&amp;#27515;&amp;#25351;&amp;#23450;&amp;#30340;&amp;#36827;&amp;#31243;,&amp;#22833;&amp;#36133;&amp;#21017;&amp;#25243;&amp;#20986;Win32Error&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;   
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;kill&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; pid &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;hproc &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; open_process &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt; PROCESS_TERMINATE &lt;span style="color: #a52a2a;"&gt;]&lt;/span&gt; &lt;span style="color: #008b8b;"&gt;false&lt;/span&gt; pid &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;

  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#22914;&amp;#26524;terminate_process&amp;#25243;&amp;#20986;&amp;#24322;&amp;#24120;,&amp;#21017;&amp;#20851;&amp;#38381;&amp;#21477;&amp;#26564;,&amp;#24182;&amp;#37325;&amp;#26032;&amp;#25243;&amp;#20986;&amp;#24322;&amp;#24120; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #6e9ac9;"&gt;try&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
    terminate_process hproc 1&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;
    close_handle hproc
  &lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;
  &lt;span style="color: #6e9ac9;"&gt;with&lt;/span&gt; exn &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; close_handle hproc&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;raise&lt;/span&gt; exn


&lt;/pre&gt;


&lt;p&gt;
    kill.ml,&#20027;&#31243;&#24207;,&#27880;&#24847;&#36825;&#20010;&#25991;&#20214;&#35201;&#20197;cp936&#32534;&#30721;&#20445;&#23384;&#65292;&#21542;&#21017;cmd&#36755;&#20986;&#20081;&#30721;:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #a36238;"&gt;(*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#36827;&amp;#31243;&amp;#32467;&amp;#26463;&amp;#24037;&amp;#20855;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;main&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;pname &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;ref&lt;/span&gt; None &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;kill_all &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;ref&lt;/span&gt; &lt;span style="color: #008b8b;"&gt;false&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;

  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;usage &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"&amp;#36827;&amp;#31243;&amp;#32467;&amp;#26463;&amp;#24037;&amp;#20855;\n&amp;#20351;&amp;#29992;&amp;#26041;&amp;#27861;:  kill [-a] [-n &amp;lt;process name&amp;gt;] [pid ...] "&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;args &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Arg&lt;/span&gt;.align &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;
    &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #b643aa;"&gt;"-n"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Arg&lt;/span&gt;.String &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;s &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; pname &lt;span style="color: #a52a2a;"&gt;:=&lt;/span&gt; Some s&lt;span style="color: #a52a2a;"&gt;),&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;" &amp;#35201;&amp;#32467;&amp;#26463;&amp;#30340;&amp;#36827;&amp;#31243;&amp;#21517;"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;);&lt;/span&gt;
    &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #b643aa;"&gt;"-a"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Arg&lt;/span&gt;.Set kill_all&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;" &amp;#32467;&amp;#26463;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243;&amp;#21517;&amp;#21305;&amp;#37197;&amp;#30340;&amp;#36827;&amp;#31243;"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;]&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Array&lt;/span&gt;.length &lt;span style="color: #93e93f;"&gt;Sys&lt;/span&gt;.argv &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; 1 &lt;span style="color: #6e9ac9;"&gt;then&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;Arg&lt;/span&gt;.usage args usage&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;exit&lt;/span&gt; 1&lt;span style="color: #a52a2a;"&gt;);&lt;/span&gt;

  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#28155;&amp;#21152;&amp;#21629;&amp;#20196;&amp;#34892;&amp;#21442;&amp;#25968;&amp;#19978;&amp;#30340;pid &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;pids &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;ref&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[]&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;append_pids&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; s &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
    &lt;span style="color: #6e9ac9;"&gt;try&lt;/span&gt;
      &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;id &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; int_of_string s &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
      pids &lt;span style="color: #a52a2a;"&gt;:=&lt;/span&gt; id &lt;span style="color: #a52a2a;"&gt;::&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;!&lt;/span&gt;pids
    &lt;span style="color: #6e9ac9;"&gt;with&lt;/span&gt; _ &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;failwith&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"&amp;#36827;&amp;#31243;id&amp;#24517;&amp;#39035;&amp;#20026;&amp;#25968;&amp;#23383;"&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #93e93f;"&gt;Arg&lt;/span&gt;.parse args append_pids usage&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;

  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#35774;&amp;#32622;&amp;#35843;&amp;#35797;&amp;#26435;&amp;#38480; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.enable_privilege &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.SE_DEBUG&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;

  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#26522;&amp;#20030;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;all_proc &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Array&lt;/span&gt;.to_list &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.enum_processes &lt;span style="color: #a52a2a;"&gt;())&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;

  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#32467;&amp;#26463;&amp;#36827;&amp;#31243;,pids&amp;#20026;&amp;#36827;&amp;#31243;id&amp;#21015;&amp;#34920; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;kill_procs&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; pids &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;kill_proc&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; pid &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
        &lt;span style="color: #6e9ac9;"&gt;try&lt;/span&gt; 
          &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;name &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.assoc pid all_proc &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
          &lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"&amp;#32467;&amp;#26463;&amp;#36827;&amp;#31243; %-6d: %s\n"&lt;/span&gt; pid name&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;
          &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.kill pid
        &lt;span style="color: #6e9ac9;"&gt;with&lt;/span&gt;
        &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Not_found &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"&amp;#25214;&amp;#19981;&amp;#21040;&amp;#36827;&amp;#31243;id:%d\n"&lt;/span&gt; pid
        &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.Win32Error &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;id&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; msg&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"[Win32 Error %d]: %s"&lt;/span&gt; id msg
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.iter kill_proc pids
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;

  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#32467;&amp;#26463;&amp;#25152;&amp;#26377;&amp;#25351;&amp;#23450;&amp;#36827;&amp;#31243;id&amp;#30340;&amp;#36827;&amp;#31243; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;!&lt;/span&gt;pids &lt;span style="color: #a52a2a;"&gt;&amp;lt;&amp;gt;&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[]&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;then&lt;/span&gt; kill_procs &lt;span style="color: #a52a2a;"&gt;!&lt;/span&gt;pids &lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;

  &lt;span style="color: #6e9ac9;"&gt;match&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;!&lt;/span&gt;pname &lt;span style="color: #6e9ac9;"&gt;with&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; None &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Some s &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;is_proc_name&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;_&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; name&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; name &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; s &lt;span style="color: #a52a2a;"&gt;||&lt;/span&gt; name &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; s &lt;span style="color: #a52a2a;"&gt;^&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;".exe"&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;pids &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.filter is_proc_name all_proc &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; pids &lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;[]&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;then&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
      &lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"&amp;#25214;&amp;#19981;&amp;#21040;&amp;#36827;&amp;#31243;: %s\n"&lt;/span&gt; s&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;
      &lt;span style="color: #6e9ac9;"&gt;exit&lt;/span&gt; 1
    &lt;span style="color: #a52a2a;"&gt;);&lt;/span&gt;

    &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25226;(id, name)&amp;#30340;&amp;#21015;&amp;#34920;&amp;#21464;&amp;#25104;id&amp;#30340;&amp;#21015;&amp;#34920; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;pids &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.map &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;id&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; name&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; id&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; pids &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #6e9ac9;"&gt;if&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;!&lt;/span&gt;kill_all &lt;span style="color: #6e9ac9;"&gt;then&lt;/span&gt; kill_procs pids
    &lt;span style="color: #6e9ac9;"&gt;else&lt;/span&gt; kill_procs &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.hd pids&lt;span style="color: #a52a2a;"&gt;]&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;_ &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;  main &lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;

&lt;/pre&gt;


&lt;p&gt;
    &#32534;&#35793;&#26041;&#24335;:
&lt;/p&gt;


&lt;pre class="example"&gt;&#20197;&#19979;&#37319;&#29992;vc&#32534;&#35793;&#22120;,&#22914;&#26524;&#29992;gcc, &#24211;&#30340;&#21517;&#23383;&#19981;&#21516;, &#29992;-cclib -lpsapi &#20195;&#26367;-cclib psapi.lib
    
&#23383;&#33410;&#30721;:
ocamlc -custom -o kill.exe win32_process_stubs.c process.ml kill.ml -cclib psapi.lib

&#26412;&#22320;&#20195;&#30721;:   
ocamlopt -o kill.opt.exe win32_process_stubs.c process.ml kill.ml -cclib psapi.lib
    
&#24102;.pdb&#35843;&#35797;&#31526;&#21495;&#25991;&#20214;&#30340;&#26412;&#22320;&#20195;&#30721;(&#20165;&#38480;vc&#32534;&#35793;&#22120;,&#20063;&#21487;&#20197;&#21152;&#19978;-g&#36873;&#39033;&#21435;&#25481;&#20248;&#21270;):
ocamlopt -o kill.opt.exe win32_process_stubs.c process.ml kill.ml -ccopt "psapi.lib -link /DEBUG"

&#29983;&#25104;&#33258;&#23450;&#20041;toplevel:
ocamlmktop -custom -o processtop.exe process.ml win32_process_stubs.c -cclib psapi.lib win32_process_stubs.c
    
&#29983;&#25104;&#24211;&#25991;&#20214;:
ocamlmklib -linkall  -o process process.cmx win32_process_stubs.obj  -ldopt "advapi32.lib psapi.lib"
&#28982;&#21518;&#23601;&#21487;&#20197;&#22312;ocaml toplevel&#20013;&#20351;&#29992;#load "process.cma" &#21152;&#36733;Process&#27169;&#22359;
&lt;/pre&gt;


&lt;p&gt;
    &#38468;&#24102;&#19968;&#20010;ps.ml&#65292;&#21015;&#20986;&#24403;&#21069;&#25152;&#26377;&#36827;&#31243;:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #a36238;"&gt;(*&lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#12288;&amp;#21015;&amp;#20986;&amp;#31995;&amp;#32479;&amp;#30340;&amp;#25152;&amp;#26377;&amp;#36827;&amp;#31243;&amp;#12288;&lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;main&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;all_proc &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.enum_processes &lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #93e93f;"&gt;Array&lt;/span&gt;.iter &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;id&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; name&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"%-30s %8d\n"&lt;/span&gt; name id&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; all_proc

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;_ &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;main (); (* &amp;#27809;&amp;#26377;&amp;#25552;&amp;#21319;debug&amp;#26435;&amp;#38480;&amp;#26102;&amp;#65292;&amp;#26377;&amp;#20123;&amp;#36827;&amp;#31243;&amp;#21517;&amp;#23383;&amp;#33719;&amp;#21462;&amp;#19981;&amp;#21040; *) &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.enable_privilege &lt;span style="color: #93e93f;"&gt;Process&lt;/span&gt;.SE_DEBUG&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt;
  main &lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt;

&lt;/pre&gt;

&lt;p&gt;
    &#32534;&#35793;&#26041;&#24335;&#19982;kill&#30456;&#21516;&#65292;&#21482;&#26159;&#25226;kill&#25442;&#25104;ps&#12290;
&lt;/p&gt;
&lt;p&gt;
    &#29616;&#22312;&#21487;&#20197;&#29992;ps&#21015;&#20986;&#24403;&#21069;&#36827;&#31243;&#65292;&#28982;&#21518;&#29992;kill&#36827;&#31243;id&#25110;&#36827;&#31243;&#21517;&#30340;&#26041;&#24335;&#32467;&#26463;
    &#36827;&#31243;
&lt;/p&gt;
&lt;p&gt;    
   &#21442;&#32771;&#25991;&#31456;:
&lt;/p&gt;
&lt;p&gt;   
   &lt;a href="http://www.linux-nantes.org/~fmonnier/OCaml/ocaml-wrapping-c.php"&gt;How to wrap C functions to OCaml&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;   
   &lt;a href="http://caml.inria.fr/pub/docs/oreilly-book/html/book-ora112.html"&gt;ocaml-ora ch.12 Interoperability with C&lt;/a&gt;
&lt;/p&gt;
&lt;p&gt;   
   &lt;a href="http://caml.inria.fr/pub/docs/manual-ocaml/manual032.html"&gt;ocaml manual ch.18 Interfacing C with OCaml&lt;/a&gt;
&lt;/p&gt;


&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">学习现代编译器实现(1)</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/25_1.html"/><updated>2012-07-25T23:53:00Z</updated><published>2012-07-25T23:53:00Z</published><id>blog/2012/07/25_1.html</id><category scheme="/tags/ocaml.html" term="ocaml" label="ocaml"/><category scheme="/tags/.html" term="编译器" label="编译器"/><content type="html">&lt;p&gt;
   &#29616;&#20195;&#32534;&#35793;&#22120;&#23454;&#29616;&#65292;&#23601;&#26159;&#34382;&#20070;&#65292;&#26377;3&#20010;&#29256;&#26412;c, java, ML.&#25105;&#30475;&#30340;&#26159;ML&#30340;&#29256;&#26412;&#12290;
   &#27492;&#20070;&#30340;&#32593;&#31449;&#22320;&#22336;&#65292;&#26377;&#20195;&#30721;&#25552;&#20379;:
   &lt;a href="http://www.cs.princeton.edu/~appel/modern/"&gt;Modern Compiler Implementation&lt;/a&gt;
&lt;/p&gt;

&lt;p&gt;   
   &#19981;&#36807;ML&#29256;&#26159;&#20197;SML&#23454;&#29616;&#30340;&#65292;ocaml&#19982;&#23427;&#26377;&#28857;&#19981;&#21516;&#65292;&#19981;&#36807;&#30456;&#24046;&#19981;&#22823;&#12290;&#22823;&#22810;&#26159;&#20851;&#38190;&#23383;&#19981;
   &#21516;&#12290;
&lt;/p&gt;
&lt;p&gt;   
   &#23398;&#20064;&#31532;&#19968;&#31456;&#65306;&#31616;&#21333;&#20171;&#32461;&#12290;
   &#31243;&#24207;&#32451;&#20064;&#30340;&#20195;&#30721;&#22914;&#19979;:
&lt;/p&gt;



&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#34920;&amp;#31034;&amp;#21333;&amp;#34892;&amp;#31243;&amp;#24207; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#35821;&amp;#27861;&amp;#65306;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Stm -&amp;gt; Stm; Stm  (&amp;#22797;&amp;#21512;&amp;#35821;&amp;#21477; CompoundStm)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Stm -&amp;gt; id := Exp (&amp;#36171;&amp;#20540;&amp;#35821;&amp;#21477; AssignStm)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Stm -&amp;gt; print (ExpList) (&amp;#25171;&amp;#21360;&amp;#35821;&amp;#21477; PrintStm)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Exp -&amp;gt; id    (&amp;#26631;&amp;#35782;&amp;#31526;&amp;#34920;&amp;#36798;&amp;#24335; IdExp)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Exp -&amp;gt; num   (&amp;#25968;&amp;#23383;&amp;#34920;&amp;#36798;&amp;#24335; NumExp)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Exp -&amp;gt; Exp Binop Exp (&amp;#20108;&amp;#20803;&amp;#34920;&amp;#36798;&amp;#24335; OpExp)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Exp -&amp;gt; (Stm, Exp)    (&amp;#39034;&amp;#24207;&amp;#34920;&amp;#36798;&amp;#24335; EseqExp)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   ExpList -&amp;gt; Exp, ExpList (&amp;#34920;&amp;#36798;&amp;#24335;&amp;#21015;&amp;#34920; PairExpList)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   ExpList -&amp;gt; Exp          (&amp;#26368;&amp;#21518;&amp;#19968;&amp;#20010;&amp;#34920;&amp;#36798;&amp;#24335; LastExpList)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Binop -&amp;gt; +   (Plus)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Binop -&amp;gt; -   (Minus)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Binop -&amp;gt; x   (Times)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; *   Binop -&amp;gt; /   (Div)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;id &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; string

&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;binop &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; Plus &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Minus &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Times &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Div

&lt;span style="color: #0000ff; font-weight: bold;"&gt;type&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;stm &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; CompoundStm &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; stm &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; stm
           &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; AssignStm &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; id &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; exp
           &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PrintStm &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; exp list
&lt;span style="color: #0000ff; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;exp &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; IdExp &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; id
          &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; NumExp &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; int
          &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; OpExp &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; exp &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; binop &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; exp
          &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; EseqExp &lt;span style="color: #6e9ac9;"&gt;of&lt;/span&gt; stm &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; exp

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#36825;&amp;#20010;&amp;#32451;&amp;#20064;&amp;#20171;&amp;#32461;&amp;#20102; &amp;#29615;&amp;#22659;(&amp;#21464;&amp;#37327;&amp;#30340;&amp;#31526;&amp;#21495;&amp;#34920;);&amp;#25277;&amp;#35937;&amp;#35821;&amp;#27861;(&amp;#34920;&amp;#31034;&amp;#31243;&amp;#24207;&amp;#35821;&amp;#21477;&amp;#30340;&amp;#25968;&amp;#25454;&amp;#32467;&amp;#26500;);&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#26641;&amp;#24418;&amp;#25968;&amp;#25454;&amp;#32467;&amp;#26500;&amp;#30340;&amp;#36882;&amp;#24402;(&amp;#22312;&amp;#32534;&amp;#35793;&amp;#22120;&amp;#30340;&amp;#22810;&amp;#20010;&amp;#37096;&amp;#20998;&amp;#37117;&amp;#26377;&amp;#29992;);&amp;#21644;&amp;#20989;&amp;#25968;&amp;#24335;&amp;#32534;&amp;#31243;&amp;#39118;&amp;#26684;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#25105;&amp;#20204;&amp;#19981;&amp;#20851;&amp;#24515;&amp;#35299;&amp;#26512;(parsing)&amp;#35821;&amp;#35328;&amp;#65292;&amp;#22240;&amp;#27492;&amp;#30452;&amp;#25509;&amp;#20351;&amp;#29992;&amp;#25968;&amp;#25454;&amp;#26500;&amp;#36896;&amp;#22120;&amp;#32534;&amp;#20889;&amp;#31243;&amp;#24207; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;a := 5 + 3; b := (print (a, a-1), 10*a); print (b) &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;              
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;prog &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  CompoundStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
    AssignStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #b643aa;"&gt;"a"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; OpExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;NumExp 5&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; Plus&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; NumExp 3&lt;span style="color: #a52a2a;"&gt;)),&lt;/span&gt;
    CompoundStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
      AssignStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #b643aa;"&gt;"b"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;
                 EseqExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;PrintStm &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;IdExp &lt;span style="color: #b643aa;"&gt;"a"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; OpExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;IdExp &lt;span style="color: #b643aa;"&gt;"a"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; Minus&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; NumExp 1&lt;span style="color: #a52a2a;"&gt;)],&lt;/span&gt;
                          OpExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;NumExp 10&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; Times&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; IdExp &lt;span style="color: #b643aa;"&gt;"a"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;))),&lt;/span&gt;
        PrintStm &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;IdExp &lt;span style="color: #b643aa;"&gt;"b"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;]))&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#32451;&amp;#20064;&amp;#31243;&amp;#24207;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#19981;&amp;#20351;&amp;#29992;&amp;#24341;&amp;#29992;&amp;#21464;&amp;#37327;&amp;#65292;&amp;#25968;&amp;#32452;&amp;#65292;&amp;#25110;&amp;#36171;&amp;#20540;&amp;#34920;&amp;#36798;&amp;#24335;&amp;#31561;&amp;#24341;&amp;#29992;&amp;#31867;&amp;#22411;(&amp;#24102;&amp;#26377;&amp;#21103;&amp;#20316;&amp;#29992;&amp;#65292;&amp;#20250;&amp;#20462;&amp;#25913;&amp;#20869;&amp;#37096;&amp;#29366;&amp;#24577;)&amp;#30340;&amp;#20540;&amp;#26469;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#23454;&amp;#29616;&amp;#20197;&amp;#19979;&amp;#31243;&amp;#24207;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(*******************************************************************************&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * 1.&amp;#32534;&amp;#20889;&amp;#19968;&amp;#20010;&amp;#20989;&amp;#25968;(maxargs : stm -&amp;gt; int) &amp;#36820;&amp;#22238;stm&amp;#35821;&amp;#21477;&amp;#20013;&amp;#20219;&amp;#24847;&amp;#19968;&amp;#20010;&amp;#23376;&amp;#34920;&amp;#36798;&amp;#24335;&amp;#20013;&amp;#30340;print&amp;#35821;&amp;#21477;&amp;#30340;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#26368;&amp;#22823;&amp;#21442;&amp;#25968;&amp;#20010;&amp;#25968;&amp;#12290; &amp;#20363;&amp;#22914;maxargs(prog)&amp;#20026;2&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; ******************************************************************************&lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;maxargs&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; st &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#33719;&amp;#24471;&amp;#25152;&amp;#26377;print&amp;#20989;&amp;#25968;&amp;#30340;&amp;#21442;&amp;#25968;&amp;#20010;&amp;#25968; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;rec&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;args_aux&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; rs &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;function&lt;/span&gt; 
   &lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; CompoundStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;stm1&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; stm2&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;new_rs &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; args_aux rs stm1 &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
      args_aux new_rs stm2
    &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; AssignStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;_&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; e&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
      &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;rec&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;match_exp&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; rs &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;function&lt;/span&gt;
       &lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; IdExp _
        &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; NumExp _ &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; rs
        &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; OpExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;e1&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; _&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; e2&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;new_rs &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; match_exp rs e1 &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt; match_exp new_rs e2
        &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; EseqExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;s&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; e&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;new_rs &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; args_aux rs s &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt; match_exp new_rs e 
      &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
      match_exp rs e
    &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PrintStm l &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.length l&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;::&lt;/span&gt; rs
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;res &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; args_aux &lt;span style="color: #a52a2a;"&gt;[]&lt;/span&gt; st &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
  &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.fold_left max 0 res &lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;

maxargs prog&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;2 &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#27979;&amp;#35797;&amp;#22312;exp&amp;#20013;&amp;#20986;&amp;#29616;print&amp;#30340;&amp;#24773;&amp;#20917; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;                                           
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;test &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; AssignStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
  &lt;span style="color: #b643aa;"&gt;"test"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;
  OpExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;
    EseqExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;PrintStm &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;NumExp 8&lt;span style="color: #a52a2a;"&gt;],&lt;/span&gt; NumExp 9&lt;span style="color: #a52a2a;"&gt;),&lt;/span&gt;
    Plus&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;
    EseqExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;PrintStm &lt;span style="color: #a52a2a;"&gt;[&lt;/span&gt;NumExp 1&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; NumExp 2&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; NumExp 3&lt;span style="color: #a52a2a;"&gt;],&lt;/span&gt; NumExp 10&lt;span style="color: #a52a2a;"&gt;)));;&lt;/span&gt;

maxargs test&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt; &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;3 &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(*******************************************************************************&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * 2.&amp;#32534;&amp;#20889;&amp;#19968;&amp;#20010;&amp;#20989;&amp;#25968; interp : stm -&amp;gt; unit &amp;#35299;&amp;#37322;&amp;#36825;&amp;#20010;&amp;#35821;&amp;#35328;&amp;#30340;&amp;#31243;&amp;#24207;&amp;#12290;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#20351;&amp;#29992;&amp;#20989;&amp;#25968;&amp;#24335;&amp;#39118;&amp;#26684;&amp;#65292;&amp;#32500;&amp;#25252;&amp;#19968;&amp;#20010;(variable, integer)&amp;#21015;&amp;#34920;,&amp;#24182;&amp;#22312;AssignStm&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#22788;&amp;#26356;&amp;#26032;&amp;#36825;&amp;#20010;&amp;#21015;&amp;#34920;&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; ******************************************************************************&lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;print_assoc_lst&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; lst &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.iter &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #6e9ac9;"&gt;fun&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt;n&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; v&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"%s %d\n"&lt;/span&gt; n v&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; lst

&lt;span style="color: #a36238;"&gt;(*&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; * &amp;#25918;&amp;#22312;&amp;#22806;&amp;#36793;&amp;#20026;&amp;#20102;&amp;#20351;&amp;#29992;#trace&lt;/span&gt;
&lt;span style="color: #a36238;"&gt; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;  
&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;rec&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;inter_stm&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; tbl &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;function&lt;/span&gt;
 &lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; CompoundStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;st1&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; st2&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;new_tbl &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_stm tbl st1 &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;print_assoc_lst new_tbl; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;new_tbl &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_stm new_tbl st2 &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    new_tbl
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; AssignStm &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;id&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; e&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_exp tbl e &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;id&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; v&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;::&lt;/span&gt; tbl
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; PrintStm exps &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;print_exp&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; e &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_exp tbl e &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;  print_int v&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; print_string &lt;span style="color: #b643aa;"&gt;" "&lt;/span&gt; &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.iter print_exp exps&lt;span style="color: #a52a2a;"&gt;;&lt;/span&gt; print_newline &lt;span style="color: #a52a2a;"&gt;();&lt;/span&gt;
    tbl
&lt;span style="color: #0000ff; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;inter_exp&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; tbl &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;function&lt;/span&gt;
 &lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; IdExp id &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; &lt;span style="color: #93e93f;"&gt;List&lt;/span&gt;.assoc id tbl
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; NumExp n &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; n
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; OpExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;e1&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; op&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; e2&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v1 &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_exp tbl e1 &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;v2 &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_exp tbl e2 &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    inter_op v1 v2 op
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; EseqExp &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;st&lt;span style="color: #a52a2a;"&gt;,&lt;/span&gt; e&lt;span style="color: #a52a2a;"&gt;)&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt;
    &lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #1fe0e5;"&gt;new_tbl &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; inter_stm tbl st &lt;span style="color: #0000ff; font-weight: bold;"&gt;in&lt;/span&gt;
    inter_exp new_tbl e
&lt;span style="color: #0000ff; font-weight: bold;"&gt;and&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;inter_op&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; v1 v2 &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt; &lt;span style="color: #6e9ac9;"&gt;function&lt;/span&gt;
 &lt;span style="color: #1fe0e5;"&gt; &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Plus &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; v1 &lt;span style="color: #a52a2a;"&gt;+&lt;/span&gt; v2
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Minus &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; v1 &lt;span style="color: #a52a2a;"&gt;-&lt;/span&gt; v2
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Times &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; v1 &lt;span style="color: #a52a2a;"&gt;*&lt;/span&gt; v2
  &lt;span style="color: #a52a2a;"&gt;|&lt;/span&gt; Div &lt;span style="color: #a52a2a;"&gt;-&amp;gt;&lt;/span&gt; v1 &lt;span style="color: #a52a2a;"&gt;/&lt;/span&gt; v2

&lt;span style="color: #0000ff; font-weight: bold;"&gt;let&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;interp&lt;/span&gt;&lt;span style="color: #1fe0e5;"&gt; st &lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;=&lt;/span&gt;
  ignore &lt;span style="color: #a52a2a;"&gt;(&lt;/span&gt;inter_stm &lt;span style="color: #a52a2a;"&gt;[]&lt;/span&gt; st&lt;span style="color: #a52a2a;"&gt;);&lt;/span&gt;
  &lt;span style="color: #a52a2a;"&gt;()&lt;/span&gt; &lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;

&lt;span style="color: #a36238;"&gt;(* &lt;/span&gt;&lt;span style="color: #a36238;"&gt;&amp;#27979;&amp;#35797; &lt;/span&gt;&lt;span style="color: #a36238;"&gt;*)&lt;/span&gt;
interp prog&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;

interp test&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;   
&lt;/pre&gt;


</content></entry><entry><title type="html">一些emacs快捷键</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/24_emacs.html"/><updated>2012-07-24T15:57:00Z</updated><published>2012-07-24T15:57:00Z</published><id>blog/2012/07/24_emacs.html</id><category scheme="/tags/emacs.html" term="emacs" label="emacs"/><content type="html">&lt;p&gt;
  QuickURL &#24555;&#36895;&#25554;&#20837;url, &#20445;&#23384;url&#22320;&#22336;
  &lt;code&gt;quickurl-ask&lt;/code&gt;
  &lt;code&gt;quickurl-add&lt;/code&gt;
  &lt;code&gt;quickurl-list&lt;/code&gt;
  &lt;code&gt;quickurl-edit&lt;/code&gt;
&lt;/p&gt;
&lt;p&gt;
  &lt;code&gt;M-x tetris&lt;/code&gt; &#20420;&#32599;&#26031;&#26041;&#22359;
  &lt;code&gt;gomoku&lt;/code&gt; &#20116;&#23376;&#26827;
  &lt;code&gt;zone&lt;/code&gt; &#23631;&#20445;
  &lt;code&gt;dunnet&lt;/code&gt; mud&#28216;&#25103;
&lt;/p&gt;

&lt;p&gt;
  &lt;code&gt;C-u C-space&lt;/code&gt; &#35774;&#23450;&#20301;&#32622;
  &lt;code&gt;C-u C-@&lt;/code&gt; &#36339;&#36716;&#20301;&#32622;
&lt;/p&gt;
&lt;p&gt;
  &lt;code&gt;M-x speedbar&lt;/code&gt; &#25171;&#24320;&#24555;&#36895;&#26597;&#30475;&#31383;&#21475;
&lt;/p&gt;
</content></entry><entry><title type="html">学习Org-mode</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/24_org-mode.html"/><updated>2012-07-24T14:47:00Z</updated><published>2012-07-24T14:47:00Z</published><id>blog/2012/07/24_org-mode.html</id><category scheme="/tags/emacs.html" term="emacs" label="emacs"/><category scheme="/tags/org-mode.html" term="org-mode" label="org-mode"/><content type="html">&lt;div id="outline-container-1" class="outline-3"&gt;
&lt;h3 id="sec-1"&gt;&#22522;&#26412;&#20351;&#29992;&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-1"&gt;




&lt;pre class="example"&gt;[[&#25991;&#20214;&#20301;&#32622;file:&#36335;&#24452;][&#25551;&#36848;]] &#21019;&#24314;&#38142;&#25509;
&lt;/pre&gt;


&lt;/div&gt;

&lt;/div&gt;

&lt;div id="outline-container-2" class="outline-3"&gt;
&lt;h3 id="sec-2"&gt;&#23548;&#20986;html&lt;/h3&gt;
&lt;div class="outline-text-3" id="text-2"&gt;

&lt;p&gt;  org-publish-project project&#21517;&#31216;&#22312;org-publish-project-alist&#21464;&#37327;&#20013;&#35774;
  &#32622;
&lt;/p&gt;
&lt;/div&gt;
&lt;/div&gt;
</content></entry><entry><title type="html">vmware NAT设置</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/24_vmware-nat.html"/><updated>2012-07-24T14:41:00Z</updated><published>2012-07-24T14:41:00Z</published><id>blog/2012/07/24_vmware-nat.html</id><category scheme="/tags/openbsd.html" term="openbsd" label="openbsd"/><category scheme="/tags/vmware.html" term="vmware" label="vmware"/><content type="html">&lt;p&gt;
 nat&#35774;&#32622;&#21518;,&#34394;&#25311;&#26426;&#25163;&#21160;&#35774;&#32622;ip&#19981;&#33021;&#19978;&#32593;,&#20351;&#29992;dhcp&#21518;&#21487;&#20197;.
 openbsd &#20351;&#29992;dhcp:sudo dhclient vic0
&lt;/p&gt;</content></entry><entry><title type="html">语法高亮测试</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/24_.html"/><updated>2012-07-24T13:37:00Z</updated><published>2012-07-24T13:37:00Z</published><id>blog/2012/07/24_.html</id><category scheme="/tags/highlight.html" term="highlight" label="highlight"/><content type="html">&lt;p&gt;
   c:
&lt;/p&gt;


&lt;pre class="src src-c"&gt;&lt;span style="color: #c87e5f;"&gt;#include&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;&amp;lt;stdio.h&amp;gt;&lt;/span&gt;

&lt;span style="color: #93e93f;"&gt;int&lt;/span&gt; &lt;span style="color: #ffe829;"&gt;main&lt;/span&gt; () {
   printf(&lt;span style="color: #b643aa;"&gt;"hello, c"&lt;/span&gt;);
}
&lt;/pre&gt;


&lt;p&gt;   
   python:
&lt;/p&gt;


&lt;pre class="src src-python"&gt;&lt;span style="color: #6e9ac9;"&gt;print&lt;/span&gt; &lt;span style="color: #b643aa;"&gt;"Hello, python"&lt;/span&gt;
&lt;/pre&gt;


&lt;p&gt;
   ocaml:
&lt;/p&gt;


&lt;pre class="src src-ocaml"&gt;&lt;span style="color: #93e93f;"&gt;Printf&lt;/span&gt;.printf &lt;span style="color: #b643aa;"&gt;"Hello, caml"&lt;/span&gt;&lt;span style="color: #a52a2a;"&gt;;;&lt;/span&gt;
&lt;/pre&gt;

</content></entry><entry><title type="html">搭建o-blog</title><author><name>nil</name></author><link href="http://ntest.github.com/blog/2012/07/24_o-blog.html"/><updated>2012-07-24T10:36:00Z</updated><published>2012-07-24T10:36:00Z</published><id>blog/2012/07/24_o-blog.html</id><category scheme="/tags/o-blog.html" term="o blog" label="o blog"/><category scheme="/tags/github.html" term="github" label="github"/><content type="html">&lt;p&gt;
  &#30003;&#35831;github
  &#30003;&#35831;DISQUS (&#35780;&#35770;&#31995;&#32479;)
&lt;/p&gt;</content></entry>
</feed>
